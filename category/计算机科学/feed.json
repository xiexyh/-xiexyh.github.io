{
    "version": "https://jsonfeed.org/version/1",
    "title": "XYH",
    "subtitle": "",
    "icon": "http://www.xieyihui.top/images/favicon.ico",
    "description": "",
    "home_page_url": "http://www.xieyihui.top",
    "items": [
        {
            "id": "http://www.xieyihui.top/2020/11/12/computer-science/Project-training/SQLserver/",
            "url": "http://www.xieyihui.top/2020/11/12/computer-science/Project-training/SQLserver/",
            "title": "书店管理数据库的设计与实现",
            "date_published": "2020-11-12T05:32:33.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"实训笔记\"><a class=\"anchor\" href=\"#实训笔记\">#</a> 实训笔记</h1>\n<h2 id=\"课题背景\"><a class=\"anchor\" href=\"#课题背景\">#</a> 课题背景</h2>\n<p>网络的迅速发展正在深度的影响和改善着人们生活的各个方面，越来越多的人开始注意到了网络的重大作用。随着书店的扩大，员工的增多，员工人手操作管理数据的局限越来越明显，计算机信息管理技术的应用，不仅能够极大程度的代替了人工作业，减少了员工的负担，降低了容错率，还极大的提高了工作的效率，给商家带来更大的利益。</p>\n<h2 id=\"数据需求分析\"><a class=\"anchor\" href=\"#数据需求分析\">#</a> 数据需求分析</h2>\n<p>书店数据库的开发是适应时代发展的需求，书店管理数据库通过对信息的收集、存储、传递、统计、分析、综合查询、报表输出和信息共享，及时为书店管理人员提供全面、准确的各种数据。通过综合分析，我们将其归类于书店管理数据库不同的功能模块以实现他们的操作。书店管理数据库可以分为供应商管理、人员管理、书籍管理和货单管理四个模块（如图 1）。并且针对每部分的具体功能我们又做了如下的详细分析：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.1.png\" alt=\"\" /><br />\n供应商管理模块主要包括了供应商的联系人姓名、联系电话、供应商名称、供应商地址的基本信息。<br />\n人员管理模块主要包括了管理员编号、姓名、性别、出生日期、联系电话、家庭地址、基本月薪、入职日期的个人基本信息。<br />\n书籍管理模块主要包括书籍编号、书籍 ISBN 编码、书籍名称、书籍出版社、书籍数量、出版时间、售价和书籍类型。管理员可以对此功能增删改查。<br />\n货单管理模块主要记录了进货信息及售货信息，管理员可以对此功能进行增删改查。</p>\n<h2 id=\"数据库概念结构设计\"><a class=\"anchor\" href=\"#数据库概念结构设计\">#</a> 数据库概念结构设计</h2>\n<p>我们在数据需求分析的基础上，将系统中的实体抽象出来，作为数据库的表项，并分析系统实体之间的关系，完成 E-R 图的设计。<br />\n本数据库的实体有管理员、供应商、书籍、进货、销售、盈利。下面列出具体实体所包含的属性。<br />\n1、管理员实体（管理员编号、姓名、民族、性别、出生日期、联系电话、家庭地址、基本月薪、入职日期），实体对应属性如图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.2.png\" alt=\"\" /><br />\n 2、供应商实体（供应商编号、联系人姓名、联系电话、供应商名称、供应商地址），实体对应属性如图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.3.png\" alt=\"\" /><br />\n 3、进货实体（进货编号、书籍编号、书籍名称、出版社、进货单价、进货数量、进货日期、供应商编号、总价、经手人编号），实体对应属性如图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.4.png\" alt=\"\" /><br />\n 4、销售实体（售货编号、书籍编号、书籍名称、出版社、售价、销售数量、售货日期、总价、经手人编号），实体对应属性如下图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.5.png\" alt=\"\" /><br />\n 5、书籍实体（书籍编号、书籍 ISBN 编码、书籍名称、书籍数量、出版社、出版时间、s 售价、书籍类型），实体对应属性如下图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.6.png\" alt=\"\" /><br />\n 6、盈利实体（编号、书籍编号、书籍名称、销售量、进货价格、售价、盈利、日期），实体对应属性如下图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.7.png\" alt=\"\" /><br />\n系统整体 E-R 图如图所示，部分信息未列出。<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/project-training_picture/1.8.png\" alt=\"\" /></p>\n<h2 id=\"数据库逻辑结构设计\"><a class=\"anchor\" href=\"#数据库逻辑结构设计\">#</a> 数据库逻辑结构设计</h2>\n<p>概念结构是独立于任何一种数据模型的，在实际应用中，由于目前使用的数据库基本上都是关系数据库，因此我们将使用关系模型来设计数据库的逻辑结构。首先，需要将 E-R 图转换为关系模型，然后进行优化。<br />\nE-R 图向关系模型的转换规则是：<br />\n(1) 一个实体转换为一个关系模式（表）<br />\n一般 E-R 图中的一个实体转换为一个关系模式，实体的属性就是关系的属性，实体的码就是关系的码。<br />\n(2) 一个 1:1 联系可以转换为一个独立的关系模式，也可以与任意一端对应的关系模式合并。<br />\n(3) 一个 1:n 联系可以转换为一个独立的关系模式，也可以与 n 端对应的关系模式合并。<br />\n(4) 一个 m:n 联系可以转换为一个独立的关系模式。<br />\n(5) 一个多元联系可以转换为一个独立的关系模式。<br />\n(6) 具有相同码的关系模式可以合并。<br />\n(7) 有些 1：n 的联系，将属性合并到 n 端后，该属性也作为主码的一部分。<br />\n有了关系模型，可以进一步优化各关系模式，关系模型的优化方法为：<br />\n（1）确定数据依赖。<br />\n（2）对数据依赖进行极小化处理，消除冗余联系（参看范式理论）。<br />\n（3）确定范式级别，根据应用环境，对某些模式进行合并或分解。<br />\n根据以上转换原则和优化方法，将 E-R 图转换为关系模型所得的各表结构如下：</p>\n<ul>\n<li><strong>管理员表</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">大小</th>\n<th style=\"text-align:center\">能否为空</th>\n<th style=\"text-align:center\">约束</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">管理员编号</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">主键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">姓名</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">性别</td>\n<td style=\"text-align:center\">char</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">否<br>默认值为 “男”</td>\n<td style=\"text-align:center\">check（性别 =‘男’ or 性别 =‘女’）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">民族</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">否<br>默认值为 “汉”</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">出生日期</td>\n<td style=\"text-align:center\">datetime</td>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">联系电话</td>\n<td style=\"text-align:center\">char</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">家庭地址</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">42</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">基本月薪</td>\n<td style=\"text-align:center\">money</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">否<br>默认值为 “4000”</td>\n<td style=\"text-align:center\">check（基本月薪 &gt; 0）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">入职日期</td>\n<td style=\"text-align:center\">date</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>供应商表</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">大小</th>\n<th style=\"text-align:center\">能否为空</th>\n<th style=\"text-align:center\">约束</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">供应商编号</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\">主键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">联系人姓名</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">联系电话</td>\n<td style=\"text-align:center\">char</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">供应商名称</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">供应商地址</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">否</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<hr />\n</li>\n<li>\n<hr />\n</li>\n<li>\n<hr />\n</li>\n<li>\n<hr />\n</li>\n<li>\n<hr />\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "项目实训",
                "SQL",
                "项目实训"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-6/",
            "url": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-6/",
            "title": "第6周 Hbase常用操作命令",
            "date_published": "2020-11-11T13:52:22.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"检查hadoop集群环境\"><a class=\"anchor\" href=\"#检查hadoop集群环境\">#</a> 检查 hadoop 集群环境</h2>\n<p>hadoop1 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.11.png\" alt=\"\" /><br />\n hadoop2 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.12.png\" alt=\"\" /><br />\n hadoop3 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.13.png\" alt=\"\" /></p>\n<h2 id=\"检查hbase集群环境\"><a class=\"anchor\" href=\"#检查hbase集群环境\">#</a> 检查 Hbase 集群环境</h2>\n<p>hadoop1 运行 jps 命令的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.7.png\" alt=\"\" /><br />\nhadoop2 运行 jps 命令的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.8.png\" alt=\"\" /><br />\nhadoop3 运行 jps 命令的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.9.png\" alt=\"\" /></p>\n<h2 id=\"hbase基本操作\"><a class=\"anchor\" href=\"#hbase基本操作\">#</a> Hbase 基本操作</h2>\n<h3 id=\"hbase-shell命令\"><a class=\"anchor\" href=\"#hbase-shell命令\">#</a> Hbase Shell 命令</h3>\n<p>在 hadoop1 主节点上进入 Hbase shell 模式<br />\n在终端执行命令： <code>hbase shell</code> <br />\n 启动成功如下：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.1.png\" alt=\"\" /></p>\n<h3 id=\"显示hbase-shell-帮助文档\"><a class=\"anchor\" href=\"#显示hbase-shell-帮助文档\">#</a> 显示 HBase Shell 帮助文档</h3>\n<p>输入 <code>help</code>  并按 Enter 键，可以显示 HBase Shell 的基本使用信息<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.2.png\" alt=\"\" /></p>\n<h3 id=\"查看hbase状态\"><a class=\"anchor\" href=\"#查看hbase状态\">#</a> 查看 Hbase 状态</h3>\n<p>输入 <code>status</code> ，可以查看 Hbase 的状态<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.3.png\" alt=\"\" /></p>\n<h3 id=\"退出hbase-shell\"><a class=\"anchor\" href=\"#退出hbase-shell\">#</a> 退出 HBase Shell</h3>\n<p>使用 <code>quit</code>  命令，退出 HBase Shell 并且断开和集群的连接</p>\n<h3 id=\"hbase数据定义ddl操作\"><a class=\"anchor\" href=\"#hbase数据定义ddl操作\">#</a> hbase 数据定义（DDL）操作</h3>\n<ul>\n<li><strong>创建新表</strong><br />\n使用 create 命令来创建一个新的表。在创建的时候，必须指定表名和列族名。<br />\n命令： <code>create 'user', 'info '</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.4.png\" alt=\"\" /></li>\n<li><strong>列举表信息</strong><br />\n使用 list 命令，列出所有的表信息<br />\n命令： <code>list 'user'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.5.png\" alt=\"\" /></li>\n<li><strong>获取表描述</strong><br />\n使用 describe 命令，显示表的相关信息<br />\n命令： <code>describe 'user'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.6.png\" alt=\"\" /></li>\n<li><strong>检查表是否存在</strong><br />\n使用 exists 命令，判断表是否存在<br />\n命令： <code>exists 'user'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.7.png\" alt=\"\" /></li>\n<li><strong>删除表</strong><br />\n删除表之前，先 disable 表，再使用 drop 命令实现删除表的功能<br />\n命令： <code>drop 'user</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.8.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"数据管理dml操作\"><a class=\"anchor\" href=\"#数据管理dml操作\">#</a> 数据管理（DML）操作</h3>\n<ul>\n<li><strong>向表中插入数据</strong><br />\n使用 put 命令，将数据插入表中<br />\n命令： <code>put 'user', 'row1', 'info:a', 'value1'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.9.png\" alt=\"\" /></li>\n<li><strong>一次性扫描全表数据</strong><br />\n一种获取 HBase 数据的方法是扫描，使用 scan 命令来扫描表的数据。（可以限制扫描的范围）<br />\n命令： <code>scan 'user'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.10.png\" alt=\"\" /></li>\n<li><strong>获取一个行数据</strong><br />\n使用 get 命令来获得某一行的数据<br />\n命令： <code>get 'user', 'row1'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.11.png\" alt=\"\" /></li>\n<li><strong>禁用一个表</strong><br />\n如果你想要删除一个表或是修改它的设置，或者是其它的情况，都需要首先禁用该表。使用 disable 命令禁用表，enable 命令重新启用表。<br />\n禁用表命令： <code>disable 'user'</code> <br />\n 重新启用表命令： <code>enable 'user'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.12.png\" alt=\"\" /></li>\n<li><strong>删除数据</strong>\n<ul>\n<li>删除行中的某个列值<br />\n语法： <code>delete &lt;table&gt;, &lt;rowkey&gt;,  &lt;family:column&gt; , &lt;timestamp&gt;</code> <br />\n 命令： <code>delete 'user','rowkey001','info:a'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.13.png\" alt=\"\" /></li>\n<li>删除行<br />\n语法： <code>deleteall &lt;table&gt;, &lt;rowkey&gt;,  &lt;family:column&gt; , &lt;timestamp&gt;</code> <br />\n 命令： <code>deleteall 'user','row1'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.14.png\" alt=\"\" /></li>\n<li>删除表中的所有数据<br />\n语法： <code>truncate &lt;table&gt;</code> <br />\n 命令： <code>truncate 'user'</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/6.15.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "大数据技术原理与应用",
                "大数据",
                "学习笔记"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-5/",
            "url": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-5/",
            "title": "第5周 Hbase集群环境部署",
            "date_published": "2020-11-11T13:15:20.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"检查环境hadoop集群环境\"><a class=\"anchor\" href=\"#检查环境hadoop集群环境\">#</a> 检查环境 hadoop 集群环境</h2>\n<p>hadoop1 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.11.png\" alt=\"\" /><br />\n hadoop2 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.12.png\" alt=\"\" /><br />\n hadoop3 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.13.png\" alt=\"\" /></p>\n<h2 id=\"安装hbase集群\"><a class=\"anchor\" href=\"#安装hbase集群\">#</a> 安装 Hbase 集群</h2>\n<h3 id=\"准备软件包\"><a class=\"anchor\" href=\"#准备软件包\">#</a> 准备软件包</h3>\n<p>下载好<span class=\"exturl\" data-url=\"aHR0cDovL2FyY2hpdmUuYXBhY2hlLm9yZy9kaXN0L2hiYXNlLzEuMi42Lw==\"> hbase-1.2.6</span> 的压缩包</p>\n<h3 id=\"进入软件包的目录解压安装压缩包将hbase安装包解压缩到opt目录下\"><a class=\"anchor\" href=\"#进入软件包的目录解压安装压缩包将hbase安装包解压缩到opt目录下\">#</a> 进入软件包的目录解压安装压缩包将 hbase 安装包解压缩到 /opt 目录下</h3>\n<p>在终端执行命令： <code>cd /opt/hadoop-package</code> <br />\n 在终端执行命令： <code>tar -zxvf hbase-1.2.6-bin.tar.gz -C /opt</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.1.png\" alt=\"\" /><br />\n 解压完成截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.2.png\" alt=\"\" /></p>\n<h3 id=\"重命名\"><a class=\"anchor\" href=\"#重命名\">#</a> 重命名</h3>\n<ul>\n<li><strong>进入 /opt 目录下</strong><br />\n在终端执行命令： <code>cd /opt</code></li>\n<li><strong>重命名</strong><br />\n在终端执行命令： <code>mv hbase-1.2.6 hbase</code></li>\n</ul>\n<h3 id=\"修改hbase-sitexml配置文件\"><a class=\"anchor\" href=\"#修改hbase-sitexml配置文件\">#</a> 修改 hbase-site.xml 配置文件</h3>\n<ul>\n<li><strong>进入 conf 目录</strong><br />\n在终端执行命令： <code>cd /opt/hbase/conf/</code></li>\n<li><strong>修改 hbase-site.xml 文件</strong><br />\n在终端执行命令： <code>vim hbase-site.xml</code> <br />\n 在 <code>&lt;configuration&gt; &lt;/configuration&gt;</code>  中间添加下面代码：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>hbase.rootdir<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>hdfs://hadoop1:9000/hbase<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>hbase.cluster.distributed<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>true<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>hbase.zookeeper.quorum<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>hadoop1,hadoop2,hadoop<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr></table></figure><p>修改后的配置如下：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.3.png\" alt=\"\" /></p>\n<h3 id=\"修改regionservers\"><a class=\"anchor\" href=\"#修改regionservers\">#</a> 修改 regionservers</h3>\n<p>在终端执行命令： <code>vim regionservers</code> <br />\n 在 regionservers 配置文件中删除 localhost 后添加下面代码:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hadoop2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hadoop3</pre></td></tr></table></figure><p>修改后的配置如下：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.4.png\" alt=\"\" /></p>\n<h3 id=\"修改hbase-envsh\"><a class=\"anchor\" href=\"#修改hbase-envsh\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS1oYmFzZS1lbnYtejg5bno3OHAuc2g=\">修改 hbase-env.sh</span></h3>\n<p>在终端执行命令： <code>vim hbase-env.sh</code> <br />\n 在第二行加入下面两行代码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/opt/jdk1.8.0_162/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HBASE_MANAGES_ZK</span><span class=\"token operator\">=</span>false</pre></td></tr></table></figure><p>修改好的配置截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.5.png\" alt=\"\" /></p>\n<h3 id=\"将在配置文件同步到hadoop2和hadoop3上\"><a class=\"anchor\" href=\"#将在配置文件同步到hadoop2和hadoop3上\">#</a> 将在配置文件同步到 hadoop2 和 hadoop3 上</h3>\n<p>同步到 hadoop2 上：<br />\n在终端执行命令： <code>scp -r /opt/hbase/ hadoop2:/opt/</code> <br />\n 同步到 hadoop3 上：<br />\n在终端执行命令： <code>scp -r /opt/hbase/ hadoop3:/opt/</code></p>\n<h2 id=\"启动hbase集群\"><a class=\"anchor\" href=\"#启动hbase集群\">#</a> 启动 hbase 集群</h2>\n<h3 id=\"启动\"><a class=\"anchor\" href=\"#启动\">#</a> 启动</h3>\n<p>在 hadoop1 上进入到 hbase 的 bin 目录<br />\n在终端执行命令： <code>cd /opt/hbase/bin/</code> <br />\n 启动 hbase<br />\n 在终端执行命令： <code>./start-hbase.sh</code> <br />\n 启动过程：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.6.png\" alt=\"\" /></p>\n<h3 id=\"检查是否成功\"><a class=\"anchor\" href=\"#检查是否成功\">#</a> 检查是否成功</h3>\n<p>hadoop1 运行 jps 命令的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.7.png\" alt=\"\" /><br />\nhadoop2 运行 jps 命令的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.8.png\" alt=\"\" /><br />\nhadoop3 运行 jps 命令的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/5.9.png\" alt=\"\" /><br />\n至此，Hbase-1.2.6 已成功安装部署啦</p>\n",
            "tags": [
                "计算机科学",
                "大数据技术原理与应用",
                "大数据",
                "学习笔记",
                "教程"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-4/",
            "url": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-4/",
            "title": "第4周 Zookeeper常用操作命令",
            "date_published": "2020-11-11T12:23:38.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"检查环境hadoop集群环境\"><a class=\"anchor\" href=\"#检查环境hadoop集群环境\">#</a> 检查环境 hadoop 集群环境</h2>\n<p>hadoop1 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.11.png\" alt=\"\" /><br />\n hadoop2 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.12.png\" alt=\"\" /><br />\n hadoop3 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.13.png\" alt=\"\" /></p>\n<h2 id=\"检查环境zookeeper集群环境\"><a class=\"anchor\" href=\"#检查环境zookeeper集群环境\">#</a> 检查环境 zookeeper 集群环境</h2>\n<p>在 hadoop1 查看 zookeeper 状态<br />\n在终端执行命令： <code>zkServer.sh status</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.1.png\" alt=\"\" /><br />\n 在 hadoop2 查看 zookeeper 状态<br />\n在终端执行命令： <code>zkServer.sh status</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.2.png\" alt=\"\" /><br />\n 在 hadoop3 查看 zookeeper 状态<br />\n在终端执行命令： <code>zkServer.sh status</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.3.png\" alt=\"\" /></p>\n<h2 id=\"zookeeper常见命令\"><a class=\"anchor\" href=\"#zookeeper常见命令\">#</a> Zookeeper 常见命令</h2>\n<h3 id=\"打开客户端\"><a class=\"anchor\" href=\"#打开客户端\">#</a> 打开客户端</h3>\n<p>在终端执行命令：<span class=\"exturl\" data-url=\"aHR0cDovL3prQ2xpLnNo\">zkCli.sh</span> -server hadoop1:2181<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.4.png\" alt=\"\" /><br />\n 成功连接的截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.5.png\" alt=\"\" /></p>\n<h3 id=\"创建zookeeper节点\"><a class=\"anchor\" href=\"#创建zookeeper节点\">#</a> 创建 Zookeeper 节点</h3>\n<p>使用 create 命令，可以创建一个 Zookeeeper 节点<br />\n <code>create [-s] [-e] path data acl</code> <br />\n 其中，-s 或 - e 分别指定节点特性，顺序或临时节点，若不指定，则表示持久节点；acl 用来进行权限控制。</p>\n<ul>\n<li><strong>创建顺序节点</strong><br />\n使用 <code>create -s /zk-test 123</code>  命令创建 zk-test 顺序节点<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.6.png\" alt=\"\" /></li>\n<li><strong>创建临时节点</strong><br />\n使用 <code>create -e /zk-temp 123</code>  命令创建 zk-temp 临时节点<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.7.png\" alt=\"\" /></li>\n<li><strong>创建永久节点</strong><br />\n使用 <code>create /zk-permanent 123</code>  命令创建 zk-permanent 永久节点<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.8.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"读取节点\"><a class=\"anchor\" href=\"#读取节点\">#</a> 读取节点</h3>\n<p>与读取相关的命令有 ls 命令和 get 命令，ls 命令可以列出 Zookeeper 指定节点下的所有子节点，只能查看指定节点下的第一级的所有子节点；get 命令可以获取 Zookeeper 指定节点的数据内容和属性信息。<br />\n用法：<br />\n <code>ls path [watch]</code> <br />\n <code>get path [watch]</code> <br />\n 如果想获取根节点下面的所有子节点，使用 <code>ls /</code>  命令即可<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.9.png\" alt=\"\" /><br />\n如果想获取根节点数据内容和属性信息，使用 <code>get /</code>  命令即可<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.10.png\" alt=\"\" /><br />\n如果想获取 /zk-permanent 的数据内容和属性，可使用 <code>get /zk-permanent</code>  命令<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.11.png\" alt=\"\" /></p>\n<h3 id=\"更新节点\"><a class=\"anchor\" href=\"#更新节点\">#</a> 更新节点</h3>\n<p>使用 set 命令，可以更新指定节点的数据内容<br />\n用法： <code>set path data [version]</code> <br />\n 其中，data 就是要更新的新内容，version 表示数据版本，<br />\n如将 /zk-permanent 节点的数据更新为 456，可以使用如下命令： <code>set /zk-permanent 456</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.12.png\" alt=\"\" /></p>\n<h3 id=\"删除节点\"><a class=\"anchor\" href=\"#删除节点\">#</a> 删除节点</h3>\n<p>使用 delete 命令可以删除 Zookeeper 上的指定节点<br />\n用法： <code>delete path [version]</code> <br />\n 其中 version 也是表示数据版本，使用 <code>delete /zk-permanent</code>  命令即可删除 /zk-permanent 节点<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.13.png\" alt=\"\" /><br />\n<span class=\"red\">注：</span><br />\n若删除节点存在子节点，那么无法删除该节点，必须先删除子节点，再删除父节点。</p>\n<h3 id=\"退出客户端\"><a class=\"anchor\" href=\"#退出客户端\">#</a> 退出客户端</h3>\n<p>使用 <code>quit</code>  命令退出客户端<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/4.14.png\" alt=\"\" /></p>\n",
            "tags": [
                "计算机科学",
                "大数据技术原理与应用",
                "大数据",
                "学习笔记"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-3/",
            "url": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-3/",
            "title": "第3周 Zookeeper集群环境部署",
            "date_published": "2020-11-11T09:30:40.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"检查环境hadoop集群环境\"><a class=\"anchor\" href=\"#检查环境hadoop集群环境\">#</a> 检查环境 hadoop 集群环境</h2>\n<p>hadoop1 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.11.png\" alt=\"\" /><br />\n hadoop2 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.12.png\" alt=\"\" /><br />\n hadoop3 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.13.png\" alt=\"\" /></p>\n<h2 id=\"安装zookeeper集群\"><a class=\"anchor\" href=\"#安装zookeeper集群\">#</a> 安装 Zookeeper 集群</h2>\n<h3 id=\"软件包准备\"><a class=\"anchor\" href=\"#软件包准备\">#</a> 软件包准备</h3>\n<p>下载好<span class=\"exturl\" data-url=\"aHR0cDovL2FyY2hpdmUuYXBhY2hlLm9yZy9kaXN0L3pvb2tlZXBlci96b29rZWVwZXItMy40LjEwLw==\"> zookeeper-3.4.10</span> 的</p>\n<h3 id=\"进入软件包的目录下解压安装压缩包将zookeeper安装包解压缩到opt目录下\"><a class=\"anchor\" href=\"#进入软件包的目录下解压安装压缩包将zookeeper安装包解压缩到opt目录下\">#</a> 进入软件包的目录下解压安装压缩包将 zookeeper 安装包解压缩到 /opt 目录下</h3>\n<p>在终端执行命令： <code>cd /opt/hadoop-package</code> <br />\n 在终端执行命令： <code>tar -zxvf zookeeper-3.4.10.tar.gz -C /opt/</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.1.1.png\" alt=\"\" /><br />\n 解压完成截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.1.2.png\" alt=\"\" /></p>\n<h3 id=\"准备文件\"><a class=\"anchor\" href=\"#准备文件\">#</a> 准备文件</h3>\n<ul>\n<li><strong>进入 zookeeper 配置文件目录</strong><br />\n在终端执行命令： <code>cd /opt/zookeeper-3.4.10/conf</code></li>\n<li><strong>将 zoo_sample.cfg 配置文件复制一份并重命名为 zoo.cfg</strong><br />\n 在终端执行命令： <code>cp zoo_sample.cfg zoo.cfg</code></li>\n<li><strong>创建存放数据的文件夹</strong><br />\n在终端执行命令： <code>mkdir /opt/zookeeper-3.4.10/data</code></li>\n<li><strong>创建 myid 文件，并加入数字 1 （hadoop1 主节点为 1、hadoop2 从节点为 2、hadoop3 从节点为 3）</strong><br />\n在终端执行命令： <code>vim /opt/zookeeper-3.4.10/data/myid</code></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#hadoop1 的 myid</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr></table></figure><h3 id=\"修改zoocfg配置文件\"><a class=\"anchor\" href=\"#修改zoocfg配置文件\">#</a> 修改 zoo.cfg 配置文件</h3>\n<p>在终端执行命令： <code>vim /opt/zookeeper-3.4.10/conf/zoo.cfg</code> <br />\n 将配置文件中 dataDir 的路径改为 <code>/opt/zookeeper-3.4.10/data</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.2.1.png\" alt=\"\" /><br />\n 在配置文件最下面加入以下参数：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>server.1<span class=\"token operator\">=</span>hadoop1:2888:3888</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>server.2<span class=\"token operator\">=</span>hadoop2:2888:3888</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server.3<span class=\"token operator\">=</span>hadoop3:2888:3888</pre></td></tr></table></figure><p>修改好的配置截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.2.2.png\" alt=\"\" /><br />\n<strong>zoo.cfg 各语句的含义</strong><br />\n <code>tickTime</code> ：服务器与客户端之间交互的基本时间单元（ms）<br />\n <code>initLimit</code> ：允许 follower 连接并同步到 leader 的初始化时间，它以 tickTime 的倍数来表示。当超过设置倍数的 tickTime 时间，则连接失败<br />\n <code>syncLimit</code> ：Leader 服务器与 follower 服务器之间信息同步允许的最大时间间隔，如果超过次间隔，默认 follower 服务器与 leader 服务器之间断开链接<br />\n <code>dataDir</code> ：保存 zookeeper 数据路径<br />\n <code>clientPort</code> ：客户端访问 zookeeper 时经过服务器端时的端口号</p>\n<h3 id=\"同步配置文件到hadoop2和hadoop3上\"><a class=\"anchor\" href=\"#同步配置文件到hadoop2和hadoop3上\">#</a> 同步配置文件到 hadoop2 和 hadoop3 上</h3>\n<ul>\n<li><strong>将配置文件同步到 hadoop2 上</strong><br />\n在终端执行命令： <code>scp -r /opt/zookeeper-3.4.10/ root@hadoop2:/opt</code></li>\n<li><strong>将配置文件同步到 hadoop3 上</strong><br />\n在终端执行命令： <code>scp -r /opt/zookeeper-3.4.10/ root@hadoop3:/opt</code></li>\n</ul>\n<h3 id=\"修改hadoop2和hadoop3上的myid\"><a class=\"anchor\" href=\"#修改hadoop2和hadoop3上的myid\">#</a> 修改 hadoop2 和 hadoop3 上的 myid</h3>\n<p>在 hadoop2 上将 myid 修改为 2<br />\n 在终端执行命令： <code>vim /opt/zookeeper-3.4.10/data/myid</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.3.1.png\" alt=\"\" /></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#hadoop2 的 myid</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr></table></figure><p>在 hadoop3 上将 myid 修改为 3<br />\n 在终端执行命令： <code>vim /opt/zookeeper-3.4.10/data/myid</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.3.2.png\" alt=\"\" /></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#hadoop3 的 myid</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr></table></figure><h2 id=\"启动zookeeper集群并测试\"><a class=\"anchor\" href=\"#启动zookeeper集群并测试\">#</a> 启动 zookeeper 集群并测试</h2>\n<h3 id=\"分别启动hadoop1-hadoop2-hadoop3节点的zookeeper集群命\"><a class=\"anchor\" href=\"#分别启动hadoop1-hadoop2-hadoop3节点的zookeeper集群命\">#</a> 分别启动 hadoop1、hadoop2、hadoop3 节点的 zookeeper 集群命</h3>\n<p>在 hadoop1 启动 zookeeper<br />\n 在终端执行命令： <code>zkServer.sh start</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.4.1.png\" alt=\"\" /><br />\n 在 hadoop2 启动 zookeeper<br />\n 在终端执行命令： <code>zkServer.sh start</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.4.2.png\" alt=\"\" /><br />\n 在 hadoop3 启动 zookeeper<br />\n 在终端执行命令： <code>zkServer.sh start</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.4.3.png\" alt=\"\" /></p>\n<h3 id=\"查看启动成功命令\"><a class=\"anchor\" href=\"#查看启动成功命令\">#</a> 查看启动成功命令</h3>\n<p>通过 <code>zkServer.sh status</code>  命令可以查看启动的状态<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/3.5.png\" alt=\"\" /><br />\n至此，zookeeper-3.4.10 已经成功安装部署啦</p>\n",
            "tags": [
                "计算机科学",
                "大数据技术原理与应用",
                "大数据",
                "学习笔记",
                "教程"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-2/",
            "url": "http://www.xieyihui.top/2020/11/11/computer-science/Big-data/week-2/",
            "title": "第2周 HDFS文件系统常用操作命令",
            "date_published": "2020-11-11T08:46:58.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"检查环境hadoop集群环境\"><a class=\"anchor\" href=\"#检查环境hadoop集群环境\">#</a> 检查环境 hadoop 集群环境</h2>\n<p>hadoop1 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.11.png\" alt=\"\" /><br />\n hadoop2 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.12.png\" alt=\"\" /><br />\n hadoop3 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.13.png\" alt=\"\" /></p>\n<h2 id=\"hdfs基础命令\"><a class=\"anchor\" href=\"#hdfs基础命令\">#</a> HDFS 基础命令</h2>\n<h3 id=\"-mkdir命令\"><a class=\"anchor\" href=\"#-mkdir命令\">#</a> -mkdir 命令</h3>\n<p>功能：在 hdfs 上创建文件夹<br />\n操作：在 hdfs 上创建名为 test1 的文件夹<br />\n在终端执行命令： <code>hdfs dfs -mkdir /test1</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.1.png\" alt=\"\" /></p>\n<h3 id=\"-ls命令\"><a class=\"anchor\" href=\"#-ls命令\">#</a> -ls 命令</h3>\n<p>功能：显示目录信息<br />\n操作：显示 hdfs 根目录的信息<br />\n在终端执行命令： <code>hdfs dfs -ls /</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.2.png\" alt=\"\" /></p>\n<h3 id=\"-rm命令\"><a class=\"anchor\" href=\"#-rm命令\">#</a> -rm 命令</h3>\n<p>功能：删除文件或文件夹<br />\n注意：如果删除的文件夹下面还有文件就必须先把子文件删除，否则删除不成功<br />\n操作：删除根目录下的 test1 文件夹<br />\n在终端执行命令： <code>hdfs dfs -rm -r /test1</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.3.png\" alt=\"\" /></p>\n<h3 id=\"-mv命令\"><a class=\"anchor\" href=\"#-mv命令\">#</a> -mv 命令</h3>\n<p>功能：在 hdfs 目录中移动文件或重命名文件<br />\n操作 1：创建 stu1、stu2 文件夹，并查看创建好的文件夹<br />\n在终端执行命令： <code>hdfs dfs -mkdir /stu1</code> <br />\n 在终端执行命令： <code>hdfs dfs -mkdir /stu2</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /</code> <br />\n 操作 1 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.4.1.png\" alt=\"\" /><br />\n操作 2：在 stu1 中创建一个名为 q.txt 的文件夹并查看 stu1 的文件信息<br />\n在终端执行命令： <code>hdfs dfs -mkdir /stu1/q.txt</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /stu1</code> <br />\n 操作 2 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.4.2.png\" alt=\"\" /><br />\n操作 3：将 stu1 文件夹中的 q.txt 文件夹移动到 stu2 文件夹下，执行后查看 stu1 和 stu2 文件夹下的内容<br />\n在终端执行命令： <code>hdfs dfs -mv /stu1/q.txt /stu2</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /stu1</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /stu2</code> <br />\n 操作 3 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.4.3.png\" alt=\"\" /><br />\n操作 4：将 stu2 下的 q.txt 文件夹重命名为 qqq.txt，执行后查看 stu2 文件夹下的文件信息验证是否重命名成功<br />\n在终端执行命令： <code>hdfs dfs -mv /stu2/q.txt /stu2/qqq.txt</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /stu2</code> <br />\n 操作 4 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.4.4.png\" alt=\"\" /></p>\n<h3 id=\"-cp命令\"><a class=\"anchor\" href=\"#-cp命令\">#</a> -cp 命令</h3>\n<p>功能：从 hdfs 的一个路径复制 hdfs 的另一个路径<br />\n操作：将 stu2 文件夹中的 qqq.txt 文件夹复制到 hdfs 根目录下，并查看根目录下是否有 qqq.txt 文件夹<br />\n在终端执行命令： <code>hdfs dfs -cp /stu2/qqq.txt /</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.5.png\" alt=\"\" /></p>\n<h3 id=\"-get命令\"><a class=\"anchor\" href=\"#-get命令\">#</a> -get 命令</h3>\n<p>功能：从 hdfs 复制到本地<br />\n操作：将 hdfs 上 stu2 文件夹下的 qqq.txt 文件夹复制到 hadoop1 本地的 /opt 目录下，并进入 /opt 下查看是否复制成功<br />\n在终端执行命令： <code>hdfs dfs -get /stu2/qqq.txt /opt</code> <br />\n 在终端执行命令： <code>cd /opt/</code> <br />\n 在终端执行命令： <code>ls</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.6.png\" alt=\"\" /></p>\n<h3 id=\"-put命令\"><a class=\"anchor\" href=\"#-put命令\">#</a> -put 命令</h3>\n<p>功能：从本地文件系统中复制文件到 hdfs 文件系统中<br />\n操作 1：将本地文件系统中 /root 目录下的 iris.data 文件复制到 hdfs 的 stu1 文件夹下，并查看是否复制成功<br />\n在终端执行命令： <code>hdfs dfs -put /root/iris.data /stu1</code> <br />\n 操作 1 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.7.1.png\" alt=\"\" /><br />\n在终端执行命令： <code>hdfs dfs -ls /stu1</code> <br />\n 操作 2 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.7.2.png\" alt=\"\" /></p>\n<h3 id=\"-df命令\"><a class=\"anchor\" href=\"#-df命令\">#</a> -df 命令</h3>\n<p>功能：统计文件系统的可用空间信息<br />\n操作 1：统计 hdfs 文件系统的可用信息<br />\n在终端执行命令： <code>hdfs dfs -df -h /</code> <br />\n 操作 1 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.8.png\" alt=\"\" /></p>\n<h3 id=\"-du命令\"><a class=\"anchor\" href=\"#-du命令\">#</a> -du 命令</h3>\n<p>功能：统计一个指定目录下的文件节点数量<br />\n操作 1：统计 hdfs 文件系统中 stu1 文件夹下的文件节点数量<br />\n在终端执行命令： <code>hdfs dfs -du /stu1</code> <br />\n 操作 1 执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.9.png\" alt=\"\" /></p>\n<h3 id=\"-help查看帮助命令\"><a class=\"anchor\" href=\"#-help查看帮助命令\">#</a> -help 查看帮助命令</h3>\n<p>功能：输出这个命令的参数<br />\n在终端执行命令： <code>hdfs dfs -help/</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.10.1.png\" alt=\"\" /><br />\n在终端执行命令：hdfs dfs -usage/<br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.10.2.png\" alt=\"\" /></p>\n<h3 id=\"文件权限管理\"><a class=\"anchor\" href=\"#文件权限管理\">#</a> 文件权限管理</h3>\n<p>功能：文件权限管理<br />\n操作：将 stu1 文件夹下的 iris.data 文件权限修改为 777，并查看修改结果<br />\n在终端执行命令： <code>hdfs dfs -chmod 777 /stu1/iris.data</code> <br />\n 在终端执行命令： <code>hdfs dfs -ls /</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.11.png\" alt=\"\" /></p>\n<h3 id=\"查看具体文件\"><a class=\"anchor\" href=\"#查看具体文件\">#</a> 查看具体文件</h3>\n<p>功能：查看文件内容<br />\n操作：查看 stu1 文件夹下的 iris.data 文件的内容<br />\n在终端执行命令： <code>hdfs dfs -cat /stu1/iris.data</code> <br />\n 操作执行截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/2.12.png\" alt=\"\" /></p>\n",
            "tags": [
                "计算机科学",
                "大数据技术原理与应用",
                "大数据",
                "学习笔记"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/08/computer-science/Big-data/week-1/",
            "url": "http://www.xieyihui.top/2020/11/08/computer-science/Big-data/week-1/",
            "title": "第1周 Hadoop3.1.0集群环境部署",
            "date_published": "2020-11-08T02:54:33.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记和习题整理</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"准备主机环境\"><a class=\"anchor\" href=\"#准备主机环境\">#</a> 准备主机环境</h2>\n<h3 id=\"安装虚拟机\"><a class=\"anchor\" href=\"#安装虚拟机\">#</a> 安装虚拟机</h3>\n<p>VMware 下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8vd29ya3N0YXRpb24tcHJvLWV2YWx1YXRpb24uaHRtbA==\">https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html</span><br />\n 系统 ios：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2VudG9zLm9yZy9kb3dubG9hZC8=\">https://www.centos.org/download/</span><br />\n 基本上都是傻瓜式默认安装即可。</p>\n<h3 id=\"网络配置\"><a class=\"anchor\" href=\"#网络配置\">#</a> 网络配置</h3>\n<p><img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.1.png\" alt=\"\" /><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.2.png\" alt=\"\" /><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.3.png\" alt=\"\" /><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.4.png\" alt=\"\" /><br />\n应用确定后，运行虚拟机，打开终端：</p>\n<ul>\n<li>1. 查看网卡  <code>ip addr</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.5.png\" alt=\"\" /></li>\n<li>2. 进入 /etc/sysconfig/network-scripts/ 下查看  <code>cd /etc/sysconfig/network-scripts/</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.6.png\" alt=\"\" /></li>\n<li>3. 编辑 ifcfg-ens33 文件  <code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code> <br />\n 将原内容修改成</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">TYPE</span><span class=\"token operator\">=</span>Ethernet</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">PROXY_METHOD</span><span class=\"token operator\">=</span>none</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">BROWSER_ONLY</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#BOOTPROTO=dhcp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">DEFROUTE</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">IPV4_FAILURE_FATAL</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">IPV6INIT</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">IPV6_AUTOCONF</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">IPV6_DEFROUTE</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">IPV6_FAILURE_FATAL</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">IPV6_ADDR_GEN_MODE</span><span class=\"token operator\">=</span>stable-privacy</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span>ens33</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">UUID</span><span class=\"token operator\">=</span>c500a478-a621-42d4-b50e-1bd710003939</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">DEVICE</span><span class=\"token operator\">=</span>ens33</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#ONBOOT=no</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">IPV6_PRIVACY</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#static assignment</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">NM_CONTROLLED</span><span class=\"token operator\">=</span>no <span class=\"token comment\">#表示该接口将通过该配置文件进行设置，而不是通过网络管理器进行管理</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">ONBOOT</span><span class=\"token operator\">=</span>yes <span class=\"token comment\">#开机启动</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token assign-left variable\">BOOTPROTO</span><span class=\"token operator\">=</span>static <span class=\"token comment\">#静态 IP</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">IPADDR</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.43.177 <span class=\"token comment\">#本机地址</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">NETMASK</span><span class=\"token operator\">=</span><span class=\"token number\">255.255</span>.255.0 <span class=\"token comment\">#子网掩码</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token assign-left variable\">GATEWAY</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.43.2 <span class=\"token comment\">#默认网关</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token assign-left variable\">DNS1</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.43.2</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">DNS</span><span class=\"token operator\">=</span><span class=\"token number\">8.8</span>.8.8</pre></td></tr></table></figure><p>保存退出： <code>:wq</code></p>\n<ul>\n<li>4. 重启网络服务  <code>service network restart</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.7.png\" alt=\"\" /></li>\n<li>5. 查看 ip 信息  <code>ifconfig</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.8.png\" alt=\"\" /></li>\n<li>ping 一下百度，看看是否配置成功  <code>ping www.baidu.com</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.9.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"更改主机名称\"><a class=\"anchor\" href=\"#更改主机名称\">#</a> 更改主机名称</h3>\n<ul>\n<li>修改主机名文件（重启永久生效）  <code>vim /etc/sysconfig/network</code> <br />\n 按照同样的方法设置两个节点的 ip 和主机名<br />\n hadoop1 为主节点，hadoop2、hadoop3 为从节点</li>\n</ul>\n<h3 id=\"建立主机名和ip的映射\"><a class=\"anchor\" href=\"#建立主机名和ip的映射\">#</a> 建立主机名和 ip 的映射</h3>\n<ul>\n<li>1. 建立映射  <code>vim /etc/hosts</code> <br />\n 在末尾添加三条记录</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hadoop1\thadoop1的ip</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hadoop2\thadoop2的ip</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hadoop3\thadoop3的ip</pre></td></tr></table></figure><ul>\n<li>2. 将映射关系同步到其它两台虚拟机上<br />\n <code>scp -r /etc/hosts root@hadoop2:/etc</code> <br />\n <code>scp -r /etc/hosts root@hadoop3:/etc</code></li>\n</ul>\n<h3 id=\"关闭防火墙\"><a class=\"anchor\" href=\"#关闭防火墙\">#</a> 关闭防火墙</h3>\n<p>关闭防火墙： <code>systemctl stop firewalld.service</code></p>\n<h3 id=\"配置ssh免密登录\"><a class=\"anchor\" href=\"#配置ssh免密登录\">#</a> 配置 ssh 免密登录</h3>\n<ul>\n<li>1. 更新 SSH  <code>sudo apt-get install openssh-server</code> <br />\n 在安装 SSH 过程中，如果提示问 “Do you want to continue?”，请输入 “Y”。<br />\n安装好后，在终端中输入 “ssh  localhost” 需要输入密码才能访问。</li>\n<li>2. 配置 SSH<br />\n (1)、进入文件  <code>cd ~/.ssh/</code>         # 若没有该目录，请先执行一次 ssh localhost<br />\n (2)、生成公钥  <code>ssh-keygen -t rsa</code>     # 会有提示，都按回车即可<br />\n (3)、授权  <code>cat ./id_rsa.pub &gt;&gt; ./authorized_keys</code>   # 加入授权<br />\n再次，在终端中输入 “ssh  localhost” 无需密码直接登录，输入 exit 可以退出 ssh 登录。</li>\n<li>3. 远程发送公钥同步到 haddop2 和 hadoop3 上<br />\n <code>scp ~/.ssh/id_rsa.pub root@hadoop2:~/.ssh/</code> <br />\n <code>scp ~/.ssh/id_rsa.pub root@hadoop3:~/.ssh/</code></li>\n<li>4. 依次进入 hadoop2、hadoop3 中进行授权操作  <code>cat ./id_rsa.pub &gt;&gt; ./authorized_keys</code></li>\n</ul>\n<h3 id=\"安装jdk\"><a class=\"anchor\" href=\"#安装jdk\">#</a> 安装 JDK</h3>\n<ul>\n<li>1. 官网下载 jdk:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlLWpkazgtZG93bmxvYWRzLmh0bWw=\">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</span></li>\n<li>2. 使用 tar 解压文件到 /opt 目录在  <code>tar -zxvf jdk-8u161-linux-x64.tar.gz -C /opt/</code></li>\n<li>3. 查看是否安装成功  <code>./java -version</code></li>\n<li>4. 配置环境变量 PATH  <code>vim etc/ptofile</code> <br />\n 在最末尾添加四行</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/opt/jdk1.8.0_162\t<span class=\"token comment\">#路径因人而异，要填入自己的路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JRE_HOME</span><span class=\"token operator\">=</span><span class=\"token variable\">$JAVA_HOME</span>/jre</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin</pre></td></tr></table></figure><ul>\n<li>5. 使环境变量立刻生效  <code>source /etc/profile</code></li>\n<li>6. 同步 hadoop1 主节点的配置到 hadoop2 和 hadoop3 上<br />\n <code>scp -r /opt/jdk1.8.0_162 root@hadoop2:/opt/</code> <br />\n <code>scp -r /opt/jdk1.8.0_162 root@hadoop3:/opt/</code> <br />\n <code>scp -r /etc/profile root@hadoop2:/etc/profile</code> <br />\n <code>scp -r /etc/profile root@hadoop3:/etc/profile</code></li>\n<li>7. 依次到 hadoop2 和 hadoop3 上生效环境变量  <code>source /etc/profile</code></li>\n</ul>\n<h2 id=\"安装hadoop\"><a class=\"anchor\" href=\"#安装hadoop\">#</a> 安装 Hadoop</h2>\n<p>下载好<span class=\"exturl\" data-url=\"aHR0cDovL2FyY2hpdmUuYXBhY2hlLm9yZy9kaXN0L2hhZG9vcC9jb3JlL2hhZG9vcC0zLjEuMC8=\"> hadoop3.1.0</span> 压缩包，放到 /opt/ 目录下<br />\n进入到软件包目录  <code>cd /opt/hadoop-package</code></p>\n<h3 id=\"解压hadoop-310安装包\"><a class=\"anchor\" href=\"#解压hadoop-310安装包\">#</a> 解压 hadoop-3.1.0 安装包</h3>\n<p>终端执行命令  <code>tar -zxvf hadoop-3.1.0.tar.gz -C /opt/</code></p>\n<h3 id=\"配置环境变量\"><a class=\"anchor\" href=\"#配置环境变量\">#</a> 配置环境变量</h3>\n<p>终端执行命令  <code>vim /etc/profile</code> <br />\n 在末尾添加四行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#SET HADOOP</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">HADOOP_HOME</span><span class=\"token operator\">=</span>/opt/hadoop-3.1.0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$HADOOP_HOME</span>/bin:<span class=\"token variable\">$HADOOP_HOME</span>/sbin:<span class=\"token environment constant\">$PATH</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> HADOOP_HOME <span class=\"token environment constant\">PATH</span></pre></td></tr></table></figure><p>使环境变量生效  <code>source /etc/profile</code></p>\n<h3 id=\"修改core-sitexml配置文件\"><a class=\"anchor\" href=\"#修改core-sitexml配置文件\">#</a> 修改 core-site.xml 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/core-site.xml</code></li>\n<li>2. 在  <code>&lt;configuration&gt; &lt;/configuration&gt;</code>  中间添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>fs.defaultFS<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>hdfs://hadoop1:900<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>hadoop.tmp.dir<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>/opt/hadoop-3.1.0/tmp<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"修改hdfs-sitexml配置文件\"><a class=\"anchor\" href=\"#修改hdfs-sitexml配置文件\">#</a> 修改 hdfs-site.xml 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/hdfs-site.xml</code></li>\n<li>2. 在  <code>&lt;configuration&gt; &lt;/configuration&gt;</code>  中间添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>dfs.replication<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>dfs.namenode.name.dir<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>file:///opt/hadoop-3.1.0/hdfs/name<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>dfs.datanode.data.dir<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>file:///opt/hadoop-3.1.0/hdfs/data<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>dfs.namenode.secondary.http-address<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>hadoop2:900<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"修改workers配置文件\"><a class=\"anchor\" href=\"#修改workers配置文件\">#</a> 修改 workers 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/workers</code></li>\n<li>2. 删除里面的 localhost，加入 <code>hadoop2</code>  和 <code>hadoop3</code></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hadoop2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hadoop3</pre></td></tr></table></figure><h3 id=\"修改mapred-sitexml配置文件\"><a class=\"anchor\" href=\"#修改mapred-sitexml配置文件\">#</a> 修改 mapred-site.xml 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/mapred-site.xml</code></li>\n<li>2. 在  <code>&lt;configuration&gt; &lt;/configuration&gt;</code>  中间添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>mapreduce.framework.name<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>yarn<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>mapreduce.application.classpath<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/opt/hadoop-3.1.0/etc/hadoop,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/common/*,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/common/lib/*,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/hdfs/*,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/hdfs/lib/*,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/mapreduce/*,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/mapreduce/lib/*,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/yarn/*,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>/opt/hadoop-3.1.0/share/hadoop/yarn/lib/*</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"修改yarn-sitexml配置文件\"><a class=\"anchor\" href=\"#修改yarn-sitexml配置文件\">#</a> 修改 yarn-site.xml 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/yarn-site.xml</code></li>\n<li>2. 在  <code>&lt;configuration&gt; &lt;/configuration&gt;</code>  中间添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>yarn.resourcemanager.hostname<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>hadoop<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span>yarn.nodemanager.aux-services<span class=\"token operator\">&lt;</span>/name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">&lt;</span>value<span class=\"token operator\">></span>mapreduce_shuffle<span class=\"token operator\">&lt;</span>/value<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"修改hadoop-envsh配置文件\"><a class=\"anchor\" href=\"#修改hadoop-envsh配置文件\">#</a> 修改 hadoop-env.sh 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/hadoop-env.sh</code></li>\n<li>2. 在 hadoop-env.sh 配置文件的第二行添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/opt/jdk1.8.0_162</pre></td></tr></table></figure><h3 id=\"取消打印警告信息\"><a class=\"anchor\" href=\"#取消打印警告信息\">#</a> 取消打印警告信息</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/etc/hadoop/log4j.properties</code></li>\n<li>2. 在打开的 log4j.properties 配置文件的首行添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>log4j.logger.org.apache.hadoop.util.NativeCodeLoader<span class=\"token operator\">=</span>ERROR</pre></td></tr></table></figure><h3 id=\"修改start-dfssh和stop-dfssh配置文件\"><a class=\"anchor\" href=\"#修改start-dfssh和stop-dfssh配置文件\">#</a> 修改 start-dfs.sh 和 stop-dfs.sh 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/sbin/start-dfs.sh</code></li>\n<li>2. 在打开的 start-dfs.sh 配置文件的第二行添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_NAMENODE_SECURE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_DATANODE_SECURE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_SECONDARYNAMENODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_NAMENODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_DATANODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_SECONDARYNAMENODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_RESOURCEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_NODEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr></table></figure><ul>\n<li>3. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/sbin/stop-dfs.sh</code></li>\n<li>4. 在打开的 stop-dfs.sh 配置文件的第二行添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_NAMENODE_SECURE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_DATANODE_SECURE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_SECONDARYNAMENODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_NAMENODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_DATANODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HDFS_SECONDARYNAMENODE_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_RESOURCEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_NODEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr></table></figure><h3 id=\"修改start-yarnsh和stop-yarnsh配置文件\"><a class=\"anchor\" href=\"#修改start-yarnsh和stop-yarnsh配置文件\">#</a> 修改 start-yarn.sh 和 stop-yarn.sh 配置文件</h3>\n<ul>\n<li>1. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/sbin/start-yarn.sh</code></li>\n<li>2. 在打开的 start-yarn.sh 配置文件的第二行添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_RESOURCEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HADOOP_SECURE_DN_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_NODEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr></table></figure><ul>\n<li>3. 在终端执行命令  <code>vim /opt/hadoop-3.1.0/sbin/stop-yarn.sh</code></li>\n<li>4. 在打开的 stop-yarn.sh 配置文件的第二行添加下面代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_RESOURCEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HADOOP_SECURE_DN_USER</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">YARN_NODEMANAGER_USER</span><span class=\"token operator\">=</span>root</pre></td></tr></table></figure><h3 id=\"同步hadoop1主节点的配置到hadoop2和hadoop3上\"><a class=\"anchor\" href=\"#同步hadoop1主节点的配置到hadoop2和hadoop3上\">#</a> 同步 hadoop1 主节点的配置到 hadoop2 和 hadoop3 上</h3>\n<ul>\n<li>1、将 hadoop 配置文件同步到 hadoop2 上<br />\n在终端执行命令  <code>scp -r /opt/hadoop-3.1.0 root@hadoop2:/opt/</code> <br />\n 在终端执行命令  <code>scp -r /etc/profile root@hadoop2:/etc/profile</code> <br />\n 进入 hadoop2，在终端执行命令  <code>source /etc/profile</code></li>\n<li>2、将 hadoop 配置文件同步到 hadoop3 上<br />\n在终端执行命令  <code>scp -r /opt/hadoop-3.1.0 root@hadoop3:/opt/</code> <br />\n 在终端执行命令  <code>scp -r /etc/profile root@hadoop3:/etc/profile</code> <br />\n 进入 hadoop3，在终端执行命令  <code>source /etc/profile</code> <br />\n 返回 hadoop1 主节点</li>\n</ul>\n<h3 id=\"格式化hdfs文件系统\"><a class=\"anchor\" href=\"#格式化hdfs文件系统\">#</a> 格式化 HDFS 文件系统</h3>\n<p>在终端执行命令  <code>hdfs namenode -format</code> <br />\n 成功后截图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.10.png\" alt=\"\" /></p>\n<h2 id=\"启动集群\"><a class=\"anchor\" href=\"#启动集群\">#</a> 启动集群</h2>\n<ul>\n<li>在 hadoop1 主节点中进入 /opt/hadoop-3.1.0/sbin/ 目录  <code>cd /opt/hadoop-3.1.0/sbin/</code></li>\n<li>启动集群  <code>./start-all.sh</code></li>\n<li>在 3 台 hadoop 节点上执行 jps 命令查看 hadoop 进程\n<ul>\n<li>hadoop1 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.11.png\" alt=\"\" /></li>\n<li>hadoop2 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.12.png\" alt=\"\" /></li>\n<li>hadoop3 运行 <code>jps</code>  命令的截图<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/big-data_picture/1.13.png\" alt=\"\" /><br />\n到此，Hadoop3.1.0 集群已经成功安装完成！</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "大数据技术原理与应用",
                "大数据",
                "学习笔记",
                "教程"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/07/computer-science/SSH/week-9/",
            "url": "http://www.xieyihui.top/2020/11/07/computer-science/SSH/week-9/",
            "title": "第9周 HQL连接查询、Hibernate注解",
            "date_published": "2020-11-07T07:23:43.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"hibernate使用sql语句\"><a class=\"anchor\" href=\"#hibernate使用sql语句\">#</a> Hibernate 使用 SQL 语句</h2>\n<p>说明：Hibernate 支持全部的 SQL 查询<br />\n方法： <code>session.createSQLQuery(SQL语句)</code> <br />\n<span class=\"red\"> 注意：</span>参数是 SQL 语句，不再是 HQL 语句<br />\n返回结果： <code>Object[]</code> <br />\n<strong> 例 1：所有部门的部门号、部门名称，以及每个部门的所属员工（员工号，员工姓名）</strong><br />\n<strong>表结构：</strong><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/9.1.png\" alt=\"\" /><br />\n<strong>分析：</strong><br />\n（1）由于查询的字段来源于多张表，所以要使用 join 查询<br />\n（2）部门表中的所有记录必须显示，dept 应放在 from 后，即 from dept (left join emp on …)<br />\n<strong> SQL 语句：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> dept<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>dept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span> emp<span class=\"token punctuation\">.</span>empno<span class=\"token punctuation\">,</span>emp<span class=\"token punctuation\">.</span>ename <span class=\"token keyword\">from</span> dept</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> emp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">on</span> dept<span class=\"token punctuation\">.</span>deptno<span class=\"token operator\">=</span>emp<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>代码：</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getDeptEmpsSQL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span> <span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token class-name\">SQLQuery</span> sq <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">createSQLQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Select dept.deptno,dept.dname, emp.empno,emp.ename from dept \"</span><span class=\"token operator\">+</span><span class=\"token string\">\"left join emp \"</span><span class=\"token operator\">+</span><span class=\"token string\">\"on dept.deptno=emp.deptno\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> list <span class=\"token operator\">=</span> sq<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> objs<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token operator\">:</span>objs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ts<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>运行结果：</strong><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/9.2.png\" alt=\"\" /></p>\n<h2 id=\"聚合函数和分组统计\"><a class=\"anchor\" href=\"#聚合函数和分组统计\">#</a> 聚合函数和分组统计</h2>\n<p>说明： <code>session.createQuery(HQL语句)</code> <br />\n session.createSQLQuery (SQL 语句)，所有 SQL 语句均可在此方法中被执行<br />\n上述两种方式都能实现分组聚合，且返回的结果都是 <code>Object[]</code> 。<br />\n以下使用 session.createSQLQuery (SQL 语句) 实现。</p>\n<ul>\n<li><strong>常用的聚合函数</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数名称</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">SUM()</td>\n<td style=\"text-align:center\">返回表达式中所有值的和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AVG()</td>\n<td style=\"text-align:center\">打算平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MIN()</td>\n<td style=\"text-align:center\">返回表达式的最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MAX()</td>\n<td style=\"text-align:center\">返回表达式的最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">COUNT()</td>\n<td style=\"text-align:center\">返回组中项目的数量</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>特征</strong><br />\n a. 对一列值进行计算，并返回一个值<br />\n b. 聚合函数经常与 <code>group by</code>  分组依据一起使用<br />\n<strong>（单列）分组聚合</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 分组依据<span class=\"token punctuation\">,</span> 聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> 表  <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> 分组依据</pre></td></tr></table></figure><p><strong>（多列）分组聚合</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 分组依据<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 分组依据<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> 表 <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> 分组依据<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 分组依据<span class=\"token number\">2</span></pre></td></tr></table></figure><p>c. 聚合表达式可作为筛选条件。要求放在 group by 之后使用 having 聚合表达式 … 构成筛选条件</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 分组依据<span class=\"token punctuation\">,</span> 聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> 表 <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> 分组依据 <span class=\"token keyword\">having</span> 聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> …</pre></td></tr></table></figure><h2 id=\"hibernate连接查询\"><a class=\"anchor\" href=\"#hibernate连接查询\">#</a> Hibernate 连接查询</h2>\n<ul>\n<li><strong>内连接查询</strong><br />\n<strong>前提：</strong> 已经在两个类的映射文件中建立了关联映射。（手动、或 Hibernate 反向工程均可）<br />\n<strong>要点：</strong> 只要 A 对象有一个元素为 Set<B>属性，就可以通过下述语句查询到 Set<B> 对应的所有记录。</li>\n</ul>\n<blockquote>\n<p>from 类 A 别名 inner join fetch 别名.Set 属性名</p>\n</blockquote>\n<p><span class=\"red\">注意：</span><br />\n（1）类名后必须取别名<br />\n（2）join 后如果没有 fetch 关键字，则返回的结果不是 类的对象，而是 Object []<br />\n（3）别名。属性名 表示要连接的表</p>\n<ul>\n<li><strong>左外连接查询</strong><br />\n<strong>语法：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> 别名 <span class=\"token keyword\">from</span> 类名 别名 <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> <span class=\"token keyword\">fetch</span> 别名<span class=\"token punctuation\">.</span>属性名</pre></td></tr></table></figure><ul>\n<li><strong>隐式内连接与显示内连接</strong><br />\n显式内连接：select A. 属性 1,B. 属性 1  …  from A inner join B on <span class=\"exturl\" data-url=\"aHR0cDovL0EuaWQ9Qi5pZA==\">A.id=B.id</span><br />\n 隐式内连接：select A. 属性 1,B. 属性 1  …  from A,B where <span class=\"exturl\" data-url=\"aHR0cDovL0EuaWQ9Qi5pZA==\">A.id=B.id</span><br />\n 说明：（1）显式内连接与隐式内连接的执行效果完全相同，使用时，掌握一种即可。</li>\n</ul>\n<h2 id=\"子查询hql\"><a class=\"anchor\" href=\"#子查询hql\">#</a> 子查询（HQL）</h2>\n<ul>\n<li><strong>all</strong><br />\n 语法：all (select 子查询)<br />\n 含义：子查询结果全部</li>\n<li><strong>any</strong><br />\n 语法：any (子查询)<br />\n 含义：子查询结果中至少有一条</li>\n</ul>\n<h2 id=\"hql查询优化\"><a class=\"anchor\" href=\"#hql查询优化\">#</a> HQL 查询优化</h2>\n<p>（1）避免不恰当的 <code>or</code>  操作<br />\n（2）避免使用 <code>not</code> <br />\n（3）避免 <code>like</code>  的特殊形式<br />\n（4）避免 <code>having</code>  子句<br />\n（5）避免 <code>distinct</code> <br />\n（6）避免让 <code>索引</code> 失效的情形</p>\n<h2 id=\"用注解实现持久化类-关联关系\"><a class=\"anchor\" href=\"#用注解实现持久化类-关联关系\">#</a> 用注解实现持久化类、关联关系</h2>\n<p>在 Java 类中 添加若干注解来表示以下信息：<br />\n（1）Java 中声明持久化类\t\t\t\t\t\t@Entity<br />\n（1）Java 类与表的对应关系\t\t\t\t\t@Table\t<br />\n（2）Java 类主属性与表主键的对应关系\t\t\t@Id<br />\n（3）Java 类一般属性与表一般属性的对应关系\t\t@Column</p>\n<p><strong>好处：</strong><br />\n不再需要 Java 类.hbm.xml 配置文件，简化了开发过程。<br />\n<strong>配置映射关系的常用注解</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">注解</th>\n<th style=\"text-align:center\">含义和作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">@Entity</td>\n<td style=\"text-align:center\">该类是一个持久化类</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@Table</td>\n<td style=\"text-align:center\">指定对应的表   （默认值：持久化类名，不带包名）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@Id</td>\n<td style=\"text-align:center\">指定主键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@Column</td>\n<td style=\"text-align:center\">指定非主键列。<br>注：无此注解时，默认对应到表中的同名字段</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@GeneratedValue</td>\n<td style=\"text-align:center\">指定主键生成策略。 注：无此注解时，默认为 assigned。<br>@GeneratedValue (strategy=GenerationType.AUTO)   // 相当于 native</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@UniqueConstraint</td>\n<td style=\"text-align:center\">唯一值约束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@Notnull</td>\n<td style=\"text-align:center\">非空约束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@Lob</td>\n<td style=\"text-align:center\">该属性对应 Blob 类型、Clob 类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@Transistent</td>\n<td style=\"text-align:center\">该属性无需持久化到数据库中（即在数据库中没有字段与之对应）</td>\n</tr>\n</tbody>\n</table>\n<p>如何使用注解？：<br />\n（1）在 Java 类中，Import javax.persistence.*;<br />\n（2）在 Java 类中，使用注解表示 Java 类与表、Java 属性与表字段等对应关系。<br />\n<strong>配置关联映射的常用注解</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">注解</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">@OneToOne</td>\n<td style=\"text-align:center\">对象 A 和对象 B 是 一对一关系</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@OneToMany</td>\n<td style=\"text-align:center\">对象 A 和对象 B 是 一对多关系</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@ManyToOne</td>\n<td style=\"text-align:center\">对象 A 和对象 B 是 多对一关系</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">@ManyToMany</td>\n<td style=\"text-align:center\">对象 A 和对象 B 是 多对多关系</td>\n</tr>\n</tbody>\n</table>\n<p><strong>结论：</strong><br />\n有了注解，没有不必再写映射文件了。直接在 java 类中写出表映射、字段映射关系即可。</p>\n",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/04/computer-science/SSH/week-8/",
            "url": "http://www.xieyihui.top/2020/11/04/computer-science/SSH/week-8/",
            "title": "第8周 配置Hibernate关联映射",
            "date_published": "2020-11-04T13:05:18.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<p>数据库设计中，两个实体之间的三种关系</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">对应关系</th>\n<th style=\"text-align:center\">举例</th>\n<th style=\"text-align:center\">如何加外键</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">一对一</td>\n<td style=\"text-align:center\">人与身份证</td>\n<td style=\"text-align:center\">在任意一张表上加外键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">一对多</td>\n<td style=\"text-align:center\">部门 与 员工</td>\n<td style=\"text-align:center\">在多的一方添加外键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">多对多</td>\n<td style=\"text-align:center\">学生 和 课程</td>\n<td style=\"text-align:center\">新加一张中间表</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"java类中表示三种关联\"><a class=\"anchor\" href=\"#java类中表示三种关联\">#</a> Java 类中表示三种关联</h2>\n<p><strong>1、一对一</strong><br />\n双向关联：<br />\n从 A 对象可以查到 B 对象，同时从 B 对象也能查 A 对象，则称为 <code>双向关联</code> 。<br />\n<strong>例：人与身份证</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Card</span> card<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Card</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> number<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>单向关联：<br />\n从 A 对象能查到 B 对象，但从 B 对象查不到 A 对象，则称为 <code>单向关联</code> 。<br />\n<strong>例：人与身份证</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 人类代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">//private Card card;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 身份证类代码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Card</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> number<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>2、一对多</strong><br />\n<strong>例：部门与员工</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 部门类代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dept</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> emps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 员工类代码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Dept</span> dept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>3、多对多</strong><br />\n<strong>例：学生和课程</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 学生类代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Course</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  cs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 课程类代码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Course</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\tss<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"一对多关联\"><a class=\"anchor\" href=\"#一对多关联\">#</a> 一对多关联</h2>\n<p>建立关联的目的：从一个对象 可以查询另一对象的信息。<br />\n<strong>例如:</strong><br />\n 从 Dept 对象，调用它的 getEmps () 方法，就能查到他的所有订单；<br />\n反过来，从一个 Emp 对象，调用它的 getDept () 方法，就能查到客户的信息。<br />\n并且，这种查询无需额外的写 SQL 语句，而是采用 ORM 思想实现。<br />\n一对多实现步骤：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/8.1.png\" alt=\"\" /><br />\n<strong>效果</strong>：<br />\n在 Dept 对象中，可通过 getEmps () 方法，查询它的所有员工；<br />\n在 Emp 对象中，可通过 getDept () 方法，查询他的部门：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/8.2.png\" alt=\"\" /><br />\n<strong>好处:</strong><br />\n 从一个对象可以方便地查询出另外一个对象的信息。<br />\n<strong>A. 从一查多</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 从顾客查所有订单</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getOrdersByCustomer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Customer</span> c<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Customer</span><span class=\"token punctuation\">)</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Customer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Orders</span> o<span class=\"token operator\">:</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">getOrders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>B. 从多查一</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 从订单查顾客</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getCustomerByOrders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token class-name\">Orders</span> o<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Orders</span><span class=\"token punctuation\">)</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Orders</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span><span class=\"token function\">getCustomer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"级联操作cascade\"><a class=\"anchor\" href=\"#级联操作cascade\">#</a> 级联操作 (cascade)</h2>\n<p>含义：若两个 Java 对象已建立了关联，那么一个对象更新时，可以相应地更新所关联的对象。<br />\n设置方式：通过设置映射文件的 set 标签的 cascade 属性的值来设置<br />\n cascade 的主要取值：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">取值</th>\n<th style=\"text-align:center\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">save-update</td>\n<td style=\"text-align:center\">相当于 save 和 update 的组合</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">delete</td>\n<td style=\"text-align:center\">删除 1 的一方时，把关联的 set 对象 也从表中删除。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>例 1：</strong> 保存部门时，级联将 部门.emps 保存数据库中<br />\n 1、在 dept 映射文件中配置 cascade 属性</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emps<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cascade</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-update<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deptno<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>one-to-many</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>po.Emp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、调用 dept.getEmps.add 方法添加员工</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 级联操作保存部门对象时，把部门的 Emp 对象也保存到数据库中</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cascadeDeptEmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">Dept</span> d<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Dept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建 dept 对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   d<span class=\"token punctuation\">.</span><span class=\"token function\">setDeptno</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   d<span class=\"token punctuation\">.</span><span class=\"token function\">setDname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"网络中心\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">Empe1</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建 emp 对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   e1<span class=\"token punctuation\">.</span><span class=\"token function\">setEmpno</span><span class=\"token punctuation\">(</span> <span class=\"token number\">8001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   e1<span class=\"token punctuation\">.</span><span class=\"token function\">setEname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   d<span class=\"token punctuation\">.</span><span class=\"token function\">getEmps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 保存 dept 对象对象 (网络中心)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"red\">注:</span><br />\n 在哪个配置文件中开启的 cascade 属性，则只有调用该对象的方法，才可实现级联操作。<br />\n由于在 Dept.hbm.xml 文件中配置的 cascade 属性，所以调用 dept.getEmps ().add 方法将员工添加到部门，才能实现级联保存。（反之，如果调用 e1.setDept (d)，级联保存可能失败）。<br />\n<strong>例 2：</strong> 删除部门时，删除部门的员工<br />\n 1、在 dept.hbm.xm | 中 cascade 属性设置 delete</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emps<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cascade</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deLete<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deptno<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>one-to-many</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>po.Emp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、测试函数。删除 deptno=50 的部门</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 级联删除部门对象时，把部门] 的 Emp 对象也从数据库中删除</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cascadeDeleteEmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">Dept</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Dept</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dept</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获取 deptno=50 的部门</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 删除部门</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   s<span class=\"token punctuation\">.</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>例 3：</strong> 保存顾客时，级联保存订单<br />\n 1、在 Customer.hbm.xml 中设置 cascade 属性</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>orders<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cascade</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-update <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>one-to-many</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>po.Order<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>one-to-many</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、运行测试函数</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cascadeSave1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token class-name\">Order</span> o1<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建订单 o1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   o1<span class=\"token punctuation\">.</span><span class=\"token function\">set0id</span><span class=\"token punctuation\">(</span><span class=\"token number\">1005</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   o1<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"广州市\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   o1<span class=\"token punctuation\">.</span><span class=\"token function\">setPrice</span><span class=\"token punctuation\">(</span> <span class=\"token number\">200d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token class-name\">Customer</span> c<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建 顾客王五</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   c<span class=\"token punctuation\">.</span><span class=\"token function\">setCid</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   c<span class=\"token punctuation\">.</span>setName <span class=\"token punctuation\">(</span><span class=\"token string\">\"王五\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   c<span class=\"token punctuation\">.</span><span class=\"token function\">get0rders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将订单添加到顾客的 Set&lt;orde</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 保存顾客</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>例 4：</strong> 删除顾客时，级联删除订单<br />\n 1、在 Customer.hbm.xml 中设置 cascade 的 delete 属性</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>orders<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cascade</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-update delete<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token attr-name\">&lt;key</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>cid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>one-to-many</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>po.Order<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>one-to-many</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>2、执行测试函数 (删除 cid=3 的顾客)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 级联删除删除顾客王五 (cid=3) 时，级联删除订单</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">cascadeDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token class-name\">Customer</span> c<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Customer</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Customer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"red\">注：</span><br />\n（1）删除游离态的对象时，没有级联删除效果；只有删除持久态对象时，才有级联删除效果。<br />\n（2）在哪个配置文件中 开启的 cascade 属性，则只有调用该对象的方法，才可实现级联操作。<br />\n例如：在 Dept.hbm.xml 文件中配置的 cascade 属性，所以调用 dept.getEmps ().add 方法将员工添加到部门，才能实现级联保存。（反之，如果调用 e1.setDept (d)，级联保存可能失败）</p>\n<h2 id=\"反转操作inverse属性\"><a class=\"anchor\" href=\"#反转操作inverse属性\">#</a> 反转操作 (inverse 属性)</h2>\n<p>用途：两个类都维护外键时，让其中一方放弃外键维护，以减少不必要的 <code>update</code>  语句。<br />\ninverse 取值为 <code>true</code> ，代表放弃了外键维护能力。<br />\n用法：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\">...</span> <span class=\"token attr-name\">inverse</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t...</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>结论：</strong><br />\n开发中，在一的一方映射文件里，写上 <code>inverse=&quot;true&quot;</code> ,  让一的一方放弃维护外键。</p>\n<h2 id=\"多对多关联\"><a class=\"anchor\" href=\"#多对多关联\">#</a> 多对多关联</h2>\n<p>作用：两个实体如果是多对多的联系，在完成多对多关联之后，通过调用 get 方法，可以获取到另一个实体。<br />\n<strong>例：</strong> 学生选课程<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/8.3.png\" alt=\"\" /><br />\n多对多实现步骤:<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/8.4.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//(1) 多对多关联获取张三 (sid 23) 选的所有课程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getStudentCourses</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token class-name\">Student</span> stu <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Course</span><span class=\"token punctuation\">></span></span> courses <span class=\"token operator\">=</span> stu<span class=\"token punctuation\">.</span><span class=\"token function\">getCourses</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Course</span> c<span class=\"token operator\">:</span>courses<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print1n</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ts<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//(2) 多对多关联获取选了 cid=25 的课程 (软件设计与体系结构) 的所有学生</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getCourseStudents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token class-name\">Session</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token class-name\">Course</span> c<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Course</span><span class=\"token punctuation\">)</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Course</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> students <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">getStudents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span> stu<span class=\"token operator\">:</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>stu<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\ts<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"加载策略\"><a class=\"anchor\" href=\"#加载策略\">#</a> 加载策略</h2>\n<p>使用 Hibernate 在两个 Java 类建立了关联映射后，可以方便地从一个 Java 对象查到另一个 Java 对象的信息。<br />\n例如，在 Dept 对象和 Emp 对象之间建立了一对多关联映射后，可以很方便地从一个 dept 对象查到所有 emp 的信息。<br />\n假如业务实际上只要用到 Dept 对象，而程序却在加载 Dept 对象时，把 Dept 对象关联的所有 emp 对象也加载上了，就会产生两个弊端：<br />\n（1）执行不必要的查询语句，降低程序性能<br />\n（2）查出来的对象占据额外的内存空间<br />\n为了克服以上弊端，Hibernate 采用了 延迟加载的策略，只有当真正需要用到关联的对象，才会加载关联的对象。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">级别</th>\n<th style=\"text-align:center\">取值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">class 标签中设置 <code>lazy= &quot;true&quot;</code></td>\n<td style=\"text-align:center\">true 延迟加载<br>false 立即加载</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">set 标签中设置 <code>lazy =&quot;true&quot;</code></td>\n<td style=\"text-align:center\">true 延迟加载<br>extra 增强延迟加载<br>false 立即加载</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">many-to-one 标签中设置 <code>lazy =&quot;proxy&quot;</code></td>\n<td style=\"text-align:center\">proxy 延迟加载<br>no-proxy 无代理延迟加载<br>false 立即加载</td>\n</tr>\n</tbody>\n</table>\n<p>为了使程序响应时间尽量短、占用内存空间尽量少， hibernate 在上述三个级别上采用的都是 延迟加载策略。</p>\n",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/04/computer-science/SSH/week-7/",
            "url": "http://www.xieyihui.top/2020/11/04/computer-science/SSH/week-7/",
            "title": "第7周 HQL查询语言",
            "date_published": "2020-11-04T11:49:02.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"query对象-查询数据库\"><a class=\"anchor\" href=\"#query对象-查询数据库\">#</a> Query 对象 查询数据库</h2>\n<ul>\n<li><strong>查多条记录</strong><br />\n方法： <code>list()</code> <br />\n 语法： <code>Query q = session.createQuery(&quot;from 类名&quot;);</code> <br />\n<span class=\"red\"> 注意：</span> from 要跟类的名称，不跟表的名称。<br />\n** 例：** 查询 Dept 表中 Sales 部的信息</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Dept where dname='SALES'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dept</span><span class=\"token punctuation\">></span></span> li<span class=\"token operator\">=</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dept</span> e<span class=\"token operator\">:</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li><strong>查一条记录</strong><br />\n方法： <code>uniqueResut()</code> <br />\n 语法： <code>Query.uniqueResult()</code> <br />\n 功能：从表中查出一条记录<br />\n ** 例：** 查询 emp 表中 empno 等于 7499 的记录</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Emp where empno=:empno\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"empno\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7499</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Emp</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">uniqueResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>只查部分列（投影查询）</strong></li>\n</ul>\n<ul>\n<li>方法 1：<br />\n方法： <code>session.createQuery(select 列1,列2,…. from 类名)</code> <br />\n 效果：查询出来的每条记录被放在一个 Object [] 中<br />\n ** 例：**1 条记录放在一个 obj [] 数组中存放</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select deptno,dname from Dept\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> list2 <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> obj<span class=\"token operator\">:</span>list2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;deptNo:\"</span><span class=\"token operator\">+</span>obj<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\",:dName:\"</span><span class=\"token operator\">+</span>obj<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>方法 2：<br />\n首先，在对应类中添加构造方法，为要查询的列赋值<br />\n然后使用方法： <code>session.createQuery(select new 类名(列1,列2,…) from 类名)</code> <br />\n 效果：查询出来的每条记录就是一个 Java 对象<br />\n ** 例：** 以 Java 对象方式返回结果</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select new Dept(deptno,dname) from Dept\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dept</span><span class=\"token punctuation\">></span></span> li <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dept</span> d<span class=\"token operator\">:</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\t\t\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;deptNo:\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getDeptno</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\",:dName:\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getDname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>Where 条件查询</strong><br />\n ** 例：** 查询 emp 表中，ename 是 Smith 的用户</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Emp where ename='SMITH'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> liEmp<span class=\"token operator\">=</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span> e<span class=\"token operator\">:</span>liEmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"red\">注：</span> 当查询条件是参数，则需要使用占位符或者参数名进行绑定<br />\n ** 例 1：** 使用占位符？设置参数值</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Emp where ename=?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"SMITH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>** 例 2：** 使用参数名设置参数值</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Emp where ename=:ename\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ename\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"SMITH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>指定参数类型：</strong><br />\nsetBoolean (参数名，参数值)<br />\n setByte (参数名，参数值)<br />\n setDouble (参数名，参数值)<br />\n setDate (参数名，参数值)<br />\n setString (参数名，参数值)</p>\n<ul>\n<li><strong>分页查询</strong><br />\n语法：<br />\n从第几条开始显示: <code>Query.setFirstResult(m)</code> <br />\n 总共显示几条: <code>Query.setMaxResults(n)</code> <br />\n 功能：显示结果中的第 m 条开始的 n 条记录<br />\n ** 例：** 查询  emp 中按 sal 降序排列第 5 到第 9 条记录</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Emp order by sal desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setFirstResult</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 从第 5 条开始显示 （下标从 0 开始）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setMaxResults</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 显示 5 条</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> li <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span> e<span class=\"token operator\">:</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"criteria对象多条件查询\"><a class=\"anchor\" href=\"#criteria对象多条件查询\">#</a> Criteria 对象（多条件查询）</h2>\n<p>语法： <code>Criteria c=session.createCriteria()</code></p>\n<ul>\n<li><strong>显示所有记录</strong><br />\n ** 例：** 显示 emp 中的所有记录</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Criteria</span> c<span class=\"token operator\">=</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">createCriteria</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> li<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span> e<span class=\"token operator\">:</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>添加限制条件</strong><br />\n ** 例：** 查询 job 为 CLERK、sal&gt;1000、入职时间在 1981-04-01 到 1985-09-09 之前的员工</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 解法 1：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//Criteria.add (Restrictions) 的多条件查询</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Criteria</span> c<span class=\"token operator\">=</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">createCriteria</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Restrictions</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"CLERK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Restrictions</span><span class=\"token punctuation\">.</span><span class=\"token function\">gt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sal\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Restrictions</span><span class=\"token punctuation\">.</span><span class=\"token function\">between</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hiredate\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">strToDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1981-04-01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">strToDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1985-09-09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> li<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span> e<span class=\"token operator\">:</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span>\t\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>session<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 解法 2（传统）：</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 使用占位符的多条件查询</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span><span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token class-name\">Query</span> q <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">createQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from Emp where job=:job and sal>=:sal and hiredate>=:h1 and hiredate&lt;=:h2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"job\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CLERK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sal\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">strToDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1981-04-01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>q<span class=\"token punctuation\">.</span><span class=\"token function\">setDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HibernateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">strToDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1985-09-09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> li <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Emp</span> e<span class=\"token operator\">:</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"反向工程\"><a class=\"anchor\" href=\"#反向工程\">#</a> 反向工程</h2>\n<p>功能：从数据库中的表 自动生成 Java 类、类 - 表映射文件<br />\n步骤：<br />\n（1）在 Package Explorer 中 左键点击工程<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.1.png\" alt=\"\" /><br />\n（2）MyEclipse--&gt;Project Capabilities--&gt;Add Hibernate Capacilities<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.2.png\" alt=\"\" /><br />\n（3）选择 Hibernate 版本<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.3.png\" alt=\"\" /><br />\n（4）选择数据库配置文件<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.4.png\" alt=\"\" /><br />\n（5）创建 HibernateSessionFactory 类<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.5.1.png\" alt=\"\" /><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.5.2.png\" alt=\"\" /><br />\n（6）在 MyEclipse 中打开 Database Explorer<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.6.png\" alt=\"\" /><br />\n（7）新建一个连接<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.7.1.png\" alt=\"\" /><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.7.2.png\" alt=\"\" /><br />\n数据库驱动程序名： <code>oracle.jdbc.driver.OracleDriver</code> <br />\n 数据库实例： <code>jdbc:oracle:thin:@主机名/IP:1521:数据库实例名</code> <br />\n（8）在 DB Explorer 中登录数据库<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.8.png\" alt=\"\" /><br />\n（9）在 DB Browser 中找到要生成 PO 类、映射文件的表<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.9.png\" alt=\"\" /><br />\n（10）选择生成的 PO 类、映射文件放置的目录<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.10.png\" alt=\"\" /><br />\n（11）查看生的 PO 类、映射文件<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/7.11.png\" alt=\"\" /><br />\n（12）说明：<br />\n自动生成的 PO 类的数据类型，有时需要根据实际情况进行修改。<br />\n（例如：java.lang.BigDecimal 修改成 java.lang.Long）</p>\n",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/11/04/computer-science/SSH/week-6/",
            "url": "http://www.xieyihui.top/2020/11/04/computer-science/SSH/week-6/",
            "title": "第6周 主键生成策略、Java对象的三种状态、Hibernate缓存、脏检查",
            "date_published": "2020-11-04T07:13:39.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"主键生成策略\"><a class=\"anchor\" href=\"#主键生成策略\">#</a> 主键生成策略</h2>\n<ul>\n<li><strong>native</strong><br />\n 由 Hibernate 根据数据库的类型自动生成主键。Java 程序不必管理主键。<br />\n使用频率：常用<br />\n优点：不管底层使用何种数据库，都适用。</li>\n<li><strong>assigned</strong><br />\nJava 程序要生成主键值，Hibernate 不生成主键值。（默认方式）<br />\n使用频率：常用</li>\n<li><strong>increment</strong><br />\n 主键由 hibernate 维护。<br />\n缺点：；两个用户同时插入记录时，可能发生主键冲突<br />\n使用频率：较少</li>\n<li><strong>identify</strong><br />\n 主键由数据库维护。适用于 <code>mysql</code> 、 <code>sql server</code>  等数据库<br />\n它要求数据库把主键定义为自动增长字段类型<br />\n优点：无线程冲突问题。<br />\n使用频率：较少</li>\n<li><strong>sequence</strong><br />\n 主键由数据库维护，适用于 <code>Oralce</code> 。<br />\n由 sequence 自动生成值来作为主键值。<br />\n使用频率：较少</li>\n</ul>\n<h2 id=\"持久化对象的三种状态\"><a class=\"anchor\" href=\"#持久化对象的三种状态\">#</a> 持久化对象的三种状态</h2>\n<p>持久化对象：PO = VO + hbm 映射<br />\n<strong> PO 对象的三种状态</strong><br />\n划分依据：是否与 session 关联（.save (obj)  .update (obj)  .get (obj)）、是否有 OID</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">是否与 session 关联</th>\n<th style=\"text-align:center\">是否有 OID</th>\n<th style=\"text-align:center\">Java 对象的状态</th>\n<th style=\"text-align:center\">对表中记录的影响力</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">×</td>\n<td style=\"text-align:center\">×</td>\n<td style=\"text-align:center\">瞬时态</td>\n<td style=\"text-align:center\">无法影响表中的记录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">×</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">游离态</td>\n<td style=\"text-align:center\">只有在关联上 session 后，才能影响表中记录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">持久态</td>\n<td style=\"text-align:center\">能够影响到表中记录<br>当发生 session.getTransaction ().commit (); 表中的记录就会与被 Java 对象更新。</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>瞬时状态（transistent）</strong><br />\n本质特征：无 OID、且未与 session 关联<br />\n例如以下两种情况：<br />\n情况 (1) <code>new</code>  出来的对象。<br />\n情况 (2) 被 <code>session.delete(obj)</code>  的对象。</li>\n<li><strong>持久化状态（Persistent）</strong><br />\n本质特征：有 OID、且与 session 关联<br />\n例如以下两种情况：<br />\n情况（1）从表中查到对象： <code>session.get()</code> 、 <code>session.load()</code> <br />\n 情况（2）使用对象更新表中的记录： <code>session.save(obj)</code> 、 <code>.update(obj)</code> 、 <code>.saveOrUpdate(obj)</code> 、 <code>.merge(obj)</code></li>\n<li><strong>游离状态（Detached）</strong><br />\n本质特征：有 OID、且未与 session 关联<br />\n例如以下情况：<br />\n <code>session.close()</code> ，引起 obj 与数据库的连接断开。</li>\n</ul>\n<h2 id=\"脏检查-刷新缓存\"><a class=\"anchor\" href=\"#脏检查-刷新缓存\">#</a> 脏检查、刷新缓存</h2>\n<p><strong>session 缓存</strong><br />\n作用： <code>load</code> 、 <code>get</code>  执行后，查出的对象的所有属性会被记录在缓存，形成快照。<br />\n当后来发生 <code>查询</code> 、 <code>事务提交</code> 、 <code>session.flush()</code>  时，hibernate 会将涉及的对象与快照进行比较，相同，则不更新数据库。不同，才更新数据库。<br />\n缓存的目的，是减少访问数据库的次数。<br />\n缓存的存在时长:<br />\n 只要 <code>session</code>  不关闭，对象就一直存在于缓存中。<br />\n<strong>缓存的常见操作</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">序列</th>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">session.flush()</td>\n<td style=\"text-align:center\">用缓存中的对象更新数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">session.clear()</td>\n<td style=\"text-align:center\">清空缓存中的所有对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">session.evict(object)</td>\n<td style=\"text-align:center\">清空缓存中的指定对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">session.refresh(object)</td>\n<td style=\"text-align:center\">让对象回到快照的状态（刚从数据库中 get 到的状态）</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>脏检查</strong><br />\n（1）使用 <code>session.load</code> 、 <code>session.get</code>  从数据库中查到对象时，session 会在缓存中记住该对象的所有属性（称为快照）。<br />\n（2）执行 <code>transaction.commit()</code>  时，hibernate 会检查对象与快照是否完全相同。<br />\n把事务提交时的对象与快照进行比较，称为 <code>脏检查</code> 。<br />\n检查的目的：如果对象与快照一致，则无需更新数据库，节省时间、资源。只有当对象与快照不一致时，才需要更新数据库。</li>\n<li><strong>刷新缓存</strong><br />\n含义：用 session 缓存中的对象属性，去更新数据库<br />\n何时发生：<br />\n(1) <code>session.flush()</code> <br />\n(2) <code>transaction.commit()</code></li>\n</ul>\n<h2 id=\"hibernate-api更新数据\"><a class=\"anchor\" href=\"#hibernate-api更新数据\">#</a> Hibernate API 更新数据</h2>\n<p>更新数据的 <code>三种</code> 方法：</p>\n<ul>\n<li><strong>session.update（游离态对象）</strong><br />\n功能：用游离态对象 去更新表中对应记录。</li>\n<li><strong>session.saveOrUpdate（瞬时态对象 | 游离态对象）</strong><br />\n功能：<br />\n当传入瞬时态对象时，效果相当于 session.save ()，即将对象插入到表中<br />\n当传入游离态对象时，效果相当于 session.update ()，用对象去更新表中对应记录。</li>\n<li><strong>session.merge（瞬时态对象 | 游离态对象）</strong><br />\n功能:<br />\n 当传入的是瞬时对象，则将该瞬时对象插入数据库，同时返回持久态的该对象。<br />\n当传入的是游离态对象，则根据该对象更新数据库，同时返回持久态的该对象。</li>\n</ul>\n<p><strong>merge 与 save 方法的比较</strong></p>\n<ul>\n<li>相同点： 都是将 new 出来的对象 保存到表中</li>\n<li>不同点：merge 保存后会返回该 PO 对象，而 save 不能返回该 PO 对象。<br />\n<strong>merge 与 update 方法的比较</strong></li>\n<li>相同点：都是用游离态的对象去 更新表中的记录</li>\n<li>不同点：merge 更新后会返回该 PO 对象，而 update 返回 void 值。<br />\n<strong>总结：</strong><br />\n存入用 <code>save</code> <br />\n 更新用 <code>update</code> <br />\n 如果存入、更新后还要使用该 PO 对象，则使用 <code>merge</code></li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/10/28/computer-science/SSH/week-5/",
            "url": "http://www.xieyihui.top/2020/10/28/computer-science/SSH/week-5/",
            "title": "第5周 SSH入门",
            "date_published": "2020-10-28T09:37:23.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"hibernate简介\"><a class=\"anchor\" href=\"#hibernate简介\">#</a> Hibernate 简介</h2>\n<p>1、是一个开源框架<br />\n 2、Hibernate 对 JDBC 进行了封装<br />\n 3、采用了 <code>ORM</code>  设计思想</p>\n<blockquote>\n<p>Object Relational Mapping，对象关系映射。<br />\n对象：Java 对象<br />\n关系：表<br />\n映射：在 Java 对象的属性 和数据库表的字段之间建立联系，以便通过操作 Java 对象就能操作表。</p>\n</blockquote>\n<p>4、工作层</p>\n<blockquote>\n<p>持久化层：DAO 层</p>\n</blockquote>\n<p>DAO 类（Data Access Object）的概念：</p>\n<blockquote>\n<p>对表进行数据库操作（增删改查等）的类，称为 DAO 类。DAO 类的作用就是对表进行增删改查，并返回结果。</p>\n</blockquote>\n<p>关联阅读：VO 类<br />\n VO 类（Value Object）的概念：<br />\n<strong>VO 是用来表示 表中的一条记录的 Java 类。</strong></p>\n<p>5、Hibernate 带来的便利<br />\n<strong>无需写 SQL 语句就能实现对数据库的操作。</strong></p>\n<h2 id=\"搭建hibernate环境\"><a class=\"anchor\" href=\"#搭建hibernate环境\">#</a> 搭建 Hibernate 环境</h2>\n<p>关于 11 个 jar 包的说明：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/5.1.png\" alt=\"\" /></p>\n<h3 id=\"步1-导入jar包-log4j日志文件\"><a class=\"anchor\" href=\"#步1-导入jar包-log4j日志文件\">#</a> 步 1  导入 jar 包、log4j 日志文件</h3>\n<p>（1）在项目下新建名为  <code>lib</code>  的文件夹， 将上述 11 个 jar 包导入到 lib 目录中。<br />\n（2）把 <code>log4j.properties</code>  拷贝到 <code>src</code>  目录下。</p>\n<h3 id=\"步2-拷贝数据库配置文件并设置其中的参数\"><a class=\"anchor\" href=\"#步2-拷贝数据库配置文件并设置其中的参数\">#</a> 步 2  拷贝数据库配置文件并设置其中的参数</h3>\n<p>作用：数据库连接参数<br />\n配置文件名： <code>hibernate.cfg.xml</code> <br />\n1、拷贝方式：<br />\n将配置文件 <code>project\\etc</code>  目录下的 <code>hibernate.cfg.xml</code>  拷贝到项目的 src 目录下<br />\n 2、设置 8 个数据库 <code>property</code>  参数</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hibernate-configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>session-factory</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  \t<span class=\"token comment\">&lt;!-- 用户名 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>connection.username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>system<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  \t<span class=\"token comment\">&lt;!-- 密码 --></span>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>connection.password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>admin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  \t<span class=\"token comment\">&lt;!-- 数据库驱动程序名 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>connection.driver_class<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>oracle.jdbc.driver.OracleDriver<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  \t <span class=\"token comment\">&lt;!-- 数据库实例 url 地址 jdbc:oracle:thin:@主机名 / IP:1521: 数据库实例名 --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>connection.url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>jdbc:oracle:thin:@127.0.0.1:1521:orcl<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  \t<span class=\"token comment\">&lt;!-- 数据库 SQL 语言说明 --></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dialect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>org.hibernate.dialect.Oracle10gDialect<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  \t<span class=\"token comment\">&lt;!-- 是否将数据库反馈的 SQL 输出到日志 --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show_sql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  \t<span class=\"token comment\">&lt;!-- 是否格式化 SQL--></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>format_sql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  \t<span class=\"token comment\">&lt;!--session 由当前执行的线程管理 --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current_session_context_class<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>thread<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>session-factory</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hibernate-configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"步3-创建vo\"><a class=\"anchor\" href=\"#步3-创建vo\">#</a> 步 3  创建 VO</h3>\n<p>VO 是怎样生成的呢？</p>\n<blockquote>\n<p>a. 数据库中的每一张表，都创建一个 Java 类与之相对应<br />\n b. 表中的每一个字段，都在 Java 类中设置一个 private 属性与之相对应<br />\n c. 最后，为每一个属性创建 setter () 和 getter ()</p>\n</blockquote>\n<p>具体过程如下，以为 dept 表创建持久化类为例：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/5.2.png\" alt=\"\" /><br />\n<strong>数据库字段类型与 Java 类型的对应：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Oracle 数据类型</th>\n<th style=\"text-align:center\">Java 类型</th>\n<th style=\"text-align:center\">MySQL 数据类型</th>\n<th style=\"text-align:center\">Java 类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Number(p)</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">int</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Varchar2、Nvarchar2</td>\n<td style=\"text-align:center\">java.lang.String</td>\n<td style=\"text-align:center\">varchar</td>\n<td style=\"text-align:center\">java.lang.String</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Date</td>\n<td style=\"text-align:center\">java.sql.Date</td>\n<td style=\"text-align:center\">Date</td>\n<td style=\"text-align:center\">java.sql.Date</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">BLOB</td>\n<td style=\"text-align:center\">byte[]</td>\n<td style=\"text-align:center\">BLOB</td>\n<td style=\"text-align:center\">byte[]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CLOB</td>\n<td style=\"text-align:center\">java.lang.String</td>\n<td style=\"text-align:center\">CLOB</td>\n<td style=\"text-align:center\">java.lang.String</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"步4-创建-vo-表映射文件并引入到hibernatecfgxml中\"><a class=\"anchor\" href=\"#步4-创建-vo-表映射文件并引入到hibernatecfgxml中\">#</a> 步 4  创建 VO - 表映射文件，并引入到 hibernate.cfg.xml 中</h3>\n<p>说明：<br />\n（1）映射文件通常与对应的 VO 类同名，例如：Dept 类 和 dept 表映射文件的名称：dept.hbm.xml<br />\n<strong> 映射文件模板</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">hibernate-mapping</span> <span class=\"token name\">PUBLIC</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">\"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">\"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hibernate-mapping</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- VO 类与表的对应关系 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>class</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>包名.VO类名<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">table</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VO类对应的表名<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!----></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VO的哪个属性对应于主键<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>表的主键<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>      </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>generator</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assigned<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!—主键的生成策略--</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VO的相应属性1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>表的非主键属性1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> VO的相应属性2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>表的非主键属性2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>class</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hibernate-mapping</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>（2）将 VO - 表映射文件引入到 hibernate.cfg.xml<br />\n<strong> 格式说明：</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hibernate-configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>session-factory</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> \t…</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapping</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VO-表映射文件的路径<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!—VO与表的映射文件--</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>session-factory</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>hibernate-configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"步5-编写测试类\"><a class=\"anchor\" href=\"#步5-编写测试类\">#</a> 步 5  编写测试类</h3>\n<p>说明：<br />\n编写测试类，并在测试类中添加 <code>insert</code> 、 <code>delete</code> 、 <code>update</code> 、 <code>select</code>  等操作数据库的方法。<br />\nHibernate 对数据库进行不同的操作， 有相当一部分代码是相同的，共有代码模板如下：<br />\n<strong>Hibernate 进行数据库操作的共有代码</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//（1）得到配置对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \t<span class=\"token class-name\">Configuration</span> config <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  \t<span class=\"token comment\">//（2）得到一个 SessionFactory</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  \t<span class=\"token class-name\">SessionFactory</span> sessionFactory<span class=\"token operator\">=</span>config<span class=\"token punctuation\">.</span><span class=\"token function\">buildSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  \t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  \t<span class=\"token comment\">//（3）得到一个 Session, 这个 session 代表 Java 程序和数据库之间的会话</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  \t<span class=\"token class-name\">Session</span> session<span class=\"token operator\">=</span>sessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  \t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  \t<span class=\"token comment\">//（4）开启事务</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  \t<span class=\"token class-name\">Transaction</span> t<span class=\"token operator\">=</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">beginTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  \t<span class=\"token comment\">//（5）执行操作  （具体的 CRUD 操作）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  \t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  \t<span class=\"token comment\">//（6）提交事务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  \tt<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  \t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  \t<span class=\"token comment\">//（7）  释放资源</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  \tsession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  \tsessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>insert</strong><br />\ninsert 的第（5）部分代码如下：<br />\n（1）创建一个 VO 对象<br />\n（2）设置 VO 的属性值<br />\n（3）session.save (VO 对象)</li>\n<li><strong>update</strong><br />\nupdate 的第（5）部分代码如下：<br />\n（1）创建一个 VO 对象<br />\n（2）设置 VO 的属性值<br />\n（3）session.update (VO 对象)</li>\n<li><strong>select</strong><br />\nselect 的第（5）部分代码如下：<br />\n（1）session.get (VO 类.class, 主键值)</li>\n<li><strong>delete</strong><br />\ndelete 的第（5）部分代码如下：<br />\n（1）session.get (VO 类.class, 主键值)<br />\n（2）session.delete (VO 对象)<br />\n<strong> 说明：session.load (参 1, 参 2) 、session.get (参 1, 参 2) 两个方法都能根据主键获取到记录。</strong></li>\n</ul>\n<h2 id=\"po类-表映射文件详解\"><a class=\"anchor\" href=\"#po类-表映射文件详解\">#</a> PO 类 - 表映射文件详解</h2>\n<p>PO = VO + 表映射文件<br />\n PO:Persistent Object 持久化对象</p>\n<h3 id=\"po编写规则\"><a class=\"anchor\" href=\"#po编写规则\">#</a> PO 编写规则</h3>\n<p>1) 必须提供无参数 <code>public</code>  构造器<br />\n 2) 所有属性 <code>private</code> ，提供 public 的 getter 和 setter 方法<br />\n 3) 必须提供标识属性（OID），与数据表中主键对应<br />\n 4) PO 类属性应尽量使用基本数据类型的包装类型<br />\n例如 int – Integer  long- Long   double-Double<br />\n5) 不要用 <code>final</code>  修饰 (将无法 生成代理对象进行优化)</p>\n<p><strong> <code>get</code>  与  <code>load</code>  的相同点、不同点</strong><br />\n<strong>相同点：</strong><br />\n都是根据 OID 查找记录，返回对象。<br />\n<strong>不同点：</strong><br />\n当查询的 id 在数据库中不存在时，get 返回 null; load 抛异常 ObjectNotFoundException</p>\n<h3 id=\"po映射文件配置\"><a class=\"anchor\" href=\"#po映射文件配置\">#</a> PO 映射文件配置</h3>\n<p><strong>OID</strong><br />\n 含义：PO 的属性中，与表的主键对应的属性。<br />\n特征：在 Hibernate 中，若两个 PO 的 OID 相同，则会被 Hibernate 认定为一个对象。</p>\n<p>配置类到指定数据库中表的映射</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;class name='cn.itcast.domain.Customer\" table=\"customer\" ></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- 配置类中 OID 属性到表主键映射 --></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;generator class=”identy\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>generator</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- 配置主健生成策略 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- 配置普通属性的映射 --></span></pre></td></tr></table></figure><h3 id=\"property上可添加约束\"><a class=\"anchor\" href=\"#property上可添加约束\">#</a> Property 上可添加约束</h3>\n<blockquote>\n<p>(1)unique=&quot;true&quot;<br />\n(2)not-null=&quot;true&quot;<br />\n(3)length=&quot;20&quot;</p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/10/28/computer-science/SSH/week-4/",
            "url": "http://www.xieyihui.top/2020/10/28/computer-science/SSH/week-4/",
            "title": "第4周 操作Oracle数据库",
            "date_published": "2020-10-28T01:53:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记和习题整理</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"表空间\"><a class=\"anchor\" href=\"#表空间\">#</a> 表空间</h2>\n<p><strong>作用：</strong></p>\n<blockquote>\n<p>a. 存放表、视图、索引、触等各种数据库对象。</p>\n</blockquote>\n<p><strong>什么场合需使用表空间</strong></p>\n<blockquote>\n<p>a. 有多个数据库用户（登录名）<br />\n为每个用户创建一个表空间，使每个用户能够把自己的表、视图等存放在专有的表空间里，方便管理。<br />\nb. 有多个业务系统<br />\n例如，某学校的网站上有 “教务管理系统”、“人事管理系统”，可为每个业务系统创建一个表空间，使得每个系统的数据库对象存放在专有的表空间里，方便管理。</p>\n</blockquote>\n<p><strong>操作</strong></p>\n<ul>\n<li><strong>创建表空间</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">tablespace</span> 表空间名\t\t\t\t<span class=\"token comment\">-- 创建</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>datafile  <span class=\"token string\">'dbf文件路径'</span>  size 文件大小\t<span class=\"token comment\">-- 表空间存放在哪个 dbf 文件中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>autoextend <span class=\"token keyword\">off</span><span class=\"token operator\">/</span><span class=\"token keyword\">on</span>\t\t\t\t\t\t<span class=\"token comment\">-- 当 dbf 空间不够时，是否自增</span></pre></td></tr></table></figure><ul>\n<li><strong>删除表空间</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">tablespace</span> 表空间名</pre></td></tr></table></figure><h2 id=\"用户管理\"><a class=\"anchor\" href=\"#用户管理\">#</a> 用户管理</h2>\n<ul>\n<li><strong>用户的分类</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">SYS 用户</th>\n<th style=\"text-align:center\">SYSTEM 用户</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">地位</td>\n<td style=\"text-align:center\">超级用户（老大）</td>\n<td style=\"text-align:center\">Oracle 默认的系统管理员，DBA 权限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">作用</td>\n<td style=\"text-align:center\">(1) 维护系统信息\t<br>(2) 管理数据库实例</td>\n<td style=\"text-align:center\">（1）管理用户、用户权限<br>不建议以 System 身份创建业务系统用的表。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">登录身份</td>\n<td style=\"text-align:center\">只能以 SYSDBA 或 SYSOPER 身份登录</td>\n<td style=\"text-align:center\">只能以 Normal 身份登录</td>\n</tr>\n</tbody>\n</table>\n<p><strong>默认的账户</strong><br />\n <code>Scott</code> : 示例账户，包含一些测试用表<br />\n <code>System</code> : 系统管理员，DBA 权限<br />\n <code>Sys</code> : 超级用户</p>\n<ul>\n<li><strong>创建用户</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Create</span> <span class=\"token keyword\">User</span> 用户名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>IDENTIFIED <span class=\"token keyword\">BY</span> 密码                   <span class=\"token comment\">--- 密码区分大小写</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Default</span> <span class=\"token keyword\">Tablespace</span> 用户的表空间\t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">Temporary</span> <span class=\"token keyword\">Tablespace</span> 临时表空间</pre></td></tr></table></figure><ul>\n<li><strong>查看用户是否存在</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> all_users</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> username<span class=\"token operator\">=</span>用户名<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>删除用户</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Drop</span> <span class=\"token keyword\">User</span> 用户名 <span class=\"token punctuation\">(</span><span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">--- 删除用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \t\t\t\t\t\t   <span class=\"token comment\">---cascade，级联删除用户的模式对象</span></pre></td></tr></table></figure><h3 id=\"用户的常用命令\"><a class=\"anchor\" href=\"#用户的常用命令\">#</a> 用户的常用命令</h3>\n<ul>\n<li><strong>查看某用户是否存在</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> all_users</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> username<span class=\"token operator\">=</span><span class=\"token string\">'用户名'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>查看当前用户的权限</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> session_privs<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"模式-schema\"><a class=\"anchor\" href=\"#模式-schema\">#</a> 模式 (Schema)</h3>\n<p>含义：一个用户所拥有的所有的 <code>数据库对象</code> 构成的集合。<br />\n说明:（1）数据库对象，表、视图、存储过程、索引等….<br />\n（2）在 Oracle 中，没创建一个用户，数据库会自动生成一个模式（schema），且 模式名 = 用户名</p>\n<h2 id=\"权限管理\"><a class=\"anchor\" href=\"#权限管理\">#</a> 权限管理</h2>\n<p>权限的种类：  <code>系统权限</code> 、 <code>对象权限</code></p>\n<h3 id=\"系统权限\"><a class=\"anchor\" href=\"#系统权限\">#</a> 系统权限</h3>\n<p>系统权限包括两个方面：<br />\n连接数据库、创建 (删除) 数据库对象（表、视图、序列……）<br />\n<strong>常见的系统权限:</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Create</span> <span class=\"token keyword\">session</span> \t  <span class=\"token comment\">--- 连接到数据库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">Create</span> <span class=\"token keyword\">table</span>  \t  <span class=\"token comment\">--- 创建表、删除表</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Create</span> <span class=\"token keyword\">View</span>  \t  <span class=\"token comment\">--- 创建视图</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">Create</span> Sequence    <span class=\"token comment\">--- 创建序列</span></pre></td></tr></table></figure><ul>\n<li><strong>授予系统权限</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> 权限名 <span class=\"token keyword\">to</span> 用户名</pre></td></tr></table></figure><ul>\n<li><strong>撤销系统权限</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">revoke</span> 权限名 <span class=\"token keyword\">from</span> 用户名</pre></td></tr></table></figure><h3 id=\"对象权限\"><a class=\"anchor\" href=\"#对象权限\">#</a> 对象权限</h3>\n<p>含义：用户对某个具体对象 进行具体操作的权限。<br />\n说明：<br />\n具体对象：指具体的一张表、视图、序列、存储过程等<br />\n具体操作： <code>insert</code> 、 <code>delete</code> 、 <code>update</code> 、 <code>select</code>  等</p>\n<ul>\n<li><strong>授予对象权限</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> 具体操作 <span class=\"token keyword\">on</span> 具体对象 <span class=\"token keyword\">to</span> 用户</pre></td></tr></table></figure><ul>\n<li><strong>撤销对象权限</strong><br />\n<strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">revoke</span> 具体操作 <span class=\"token keyword\">on</span> 具体对象 <span class=\"token keyword\">from</span> 用户</pre></td></tr></table></figure><h2 id=\"角色\"><a class=\"anchor\" href=\"#角色\">#</a> 角色</h2>\n<p>含义：若干权限组成的 “套餐”<br />\nOracle 中预定义的角色： <code>Connect</code>  角色、 <code>Resource</code>  角色、 <code>DBA</code>  角色<br />\n一般程序访问数据库，授权 <code>connect</code> 、 <code>resource</code>  两个角色<br />\n DBA 角色具有所有的系统权限，并且可以给其他用户、角色授权。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">角色类型</th>\n<th style=\"text-align:center\">连接数据库</th>\n<th style=\"text-align:center\">创建表</th>\n<th style=\"text-align:center\">授予、撤销其它用户的权限</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Connect</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">×</td>\n<td style=\"text-align:center\">×</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Resource</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">×</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DBA</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">√</td>\n</tr>\n</tbody>\n</table>\n<p><strong>命令格式：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dba_sys_privs</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> GRANTEE<span class=\"token operator\">=</span> 角色名</pre></td></tr></table></figure><h2 id=\"给用户授权应-遵循的原则\"><a class=\"anchor\" href=\"#给用户授权应-遵循的原则\">#</a> 给用户授权应 遵循的原则</h2>\n<p>（1）最小分配原则（需要多少权力，就分配多少，绝不多分）<br />\n（2）创建 4 种用户： <code>管理用户</code> 、 <code>应用用户</code> 、 <code>维护用户</code> 、 <code>备份用户</code> <br />\n（3）不要以 <code>Sys</code> 、 <code>System</code>  用户身份 创建数据库对象<br />\n（4）不要将 dba 角色授权给用户</p>\n<h2 id=\"序列\"><a class=\"anchor\" href=\"#序列\">#</a> 序列</h2>\n<p>含义：整数型等差数列<br />\n功能：在非并行环境中，可用于生成主键、唯一值键。（并行环境中，则不宜采用）<br />\n<strong>命令格式：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Create</span> Sequence \t<span class=\"token comment\">--- 序列名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">Start</span> <span class=\"token keyword\">with</span>\t\t<span class=\"token comment\">--- 首项</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Increment <span class=\"token keyword\">by</span>   \t<span class=\"token comment\">--- 公差</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>MaxValue 最大值   \t<span class=\"token comment\">--- 数列的最大值。 默认是 NoMaxValue。 不设置最大值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">Cycle</span> <span class=\"token operator\">|</span> NoCycle   <span class=\"token comment\">--- 增加到最大值后，是否 “轮回”。默认是 No Cycle</span></pre></td></tr></table></figure><p>说明：<br />\n（1）当公差取负数时，会产生递减序列；该情况下， <code>Max value</code>  应改成 <code>Min Value</code>  来表示序列的最小值。<br />\n（2）删除序列：Drop sequence 序列名</p>\n<h2 id=\"同义词\"><a class=\"anchor\" href=\"#同义词\">#</a> 同义词</h2>\n<p>含义：代号<br />\n作用：隐藏对象的名<br />\n说明：列 as 别名，表 as 别名<br />\n分类：<br />\n（1）私有同义词<br />\n特点：只有创建该同义词的用户，才能够使用该同义词。<br />\n创建私有同义词的前提条件：授予用户 <code>Create Synonym</code>  权限<br />\n（2）公有同义词：<br />\n特点：所有用户都可使用该同义词<br />\n创建公有同义词前提条件：授予用户 <code>Create Public Synonym</code>  权限<br />\n<strong>命令格式：</strong></p>\n<ul>\n<li><strong>创建私有同义词</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Create</span> Synonym 同义词名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> 对象名</pre></td></tr></table></figure><p>说明：删除的语法，Drop Synonym 同义词名称</p>\n<ul>\n<li><strong>创建公有同义词</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Create</span> <span class=\"token keyword\">Public</span> Synonym 同义词名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> 对象名</pre></td></tr></table></figure><p>说明：删除的语法，Drop Public Synonym 同义词名称</p>\n<h2 id=\"数据的导入-导出\"><a class=\"anchor\" href=\"#数据的导入-导出\">#</a> 数据的导入、导出</h2>\n<h3 id=\"导出exp命令\"><a class=\"anchor\" href=\"#导出exp命令\">#</a> 导出 —Exp 命令</h3>\n<p>功能：将数据导出成文件<br />\n说明：（1）导出的文件扩展名为 <code>dmp</code> <br />\n 命令格式：</p>\n<blockquote>\n<p>Exp 用户名 / 密码 参数 1 = 值 1 参数 2 = 值 2 …..</p>\n</blockquote>\n<p>说明：<br />\n（1） <code>tables</code>  要导出哪些表<br />\n（2）帮助文档， <code>exp –help</code></p>\n<ul>\n<li><strong>导出表</strong><br />\n说明：只导出某个用户下的几张表。<br />\n命令格式：在 CMD 中运行命令</li>\n</ul>\n<blockquote>\n<p>Exp 用户名 / 密码 tables = 表 1, 表 2…. file=dmp 文件路径 log=log 文件路径</p>\n</blockquote>\n<ul>\n<li><strong>导出 schema (用户的所有数据库对象)</strong><br />\n 导出用户下的所有数据库对象（表、视图、序列、索引、存储过程等…）<br />\n命令格式：在 CMD 中运行命令</li>\n</ul>\n<blockquote>\n<p>Exp 要导出的用户名 / 密码 file=dmp 文件路径 log=log 文件路径</p>\n</blockquote>\n<ul>\n<li><strong>导出整个数据库</strong><br />\n说明：必须使用 sysdba 身份<br />\n命令格式：在 CMD 中运行命令</li>\n</ul>\n<blockquote>\n<p>Exp system/admin full=y file=dmp 文件路径 log=log 文件路径</p>\n</blockquote>\n<h3 id=\"导入imp命令\"><a class=\"anchor\" href=\"#导入imp命令\">#</a> 导入 —imp 命令</h3>\n<ul>\n<li><strong>1、导入表</strong><br />\n命令格式：在 CMD 中运行命令</li>\n</ul>\n<blockquote>\n<p>Imp 用户名 / 密码 file=dmp 文件路径 log=log 文件路径 full=y</p>\n</blockquote>\n<ul>\n<li><strong>导入 schema</strong><br />\n 命令格式：在 CMD 中运行命令</li>\n</ul>\n<blockquote>\n<p>imp 要导出的用户名 / 密码 file=dmp 文件路径 log=log 文件路径 full=y</p>\n</blockquote>\n<ul>\n<li><strong>导入全库</strong><br />\n命令格式：在 CMD 中运行命令</li>\n</ul>\n<blockquote>\n<p>Imp system/admin file=dmp 文件路径 log=log 文件路径 full=y</p>\n</blockquote>\n<h3 id=\"plsql-developer导出\"><a class=\"anchor\" href=\"#plsql-developer导出\">#</a> PL/SQL Developer 导出</h3>\n<p>PL/SQLDeveloper--&gt; 菜单栏工具 --&gt; 导出表<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/4.1.png\" alt=\"\" /><br />\n三种方式的比较</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方式</th>\n<th style=\"text-align:center\">生成的数据文件</th>\n<th style=\"text-align:center\">特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Oracle 导出</td>\n<td style=\"text-align:center\">dmp 文件 (二进制)</td>\n<td style=\"text-align:center\">跨平台、效率高、使用最广</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SQL 插入</td>\n<td style=\"text-align:center\">sql 文件</td>\n<td style=\"text-align:center\">blob、clob 的信息无法导出</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PL/SQL Developer 导出</td>\n<td style=\"text-align:center\">pde 文件</td>\n<td style=\"text-align:center\">只有使用 PL/SQL Developer 才能处理 pde 文件</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"plsql-developer导入\"><a class=\"anchor\" href=\"#plsql-developer导入\">#</a> PL/SQL Developer 导入</h3>\n<p>PL/SQLDeveloper--&gt; 菜单栏工具 --&gt; 导入表<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/4.2.png\" alt=\"\" /><br />\n说明：3 种方式，分别用于导入 dmp、sql、pde 格式的文件</p>\n<h2 id=\"常见的sql语句优化\"><a class=\"anchor\" href=\"#常见的sql语句优化\">#</a> 常见的 SQL 语句优化</h2>\n<p>为何需要优化 SQL 语句：提高 SQL 语句的执行效率、缩短执行时间</p>\n<h3 id=\"sql语句优化的通用技巧\"><a class=\"anchor\" href=\"#sql语句优化的通用技巧\">#</a> SQL 语句优化的通用技巧</h3>\n<ul>\n<li><em><em>select 语句中不要使用 <em>，而要使用具体的列名</em></em><br />\n原理：<br />\n只要使用</em>，数据库引擎就需要要查询数据字典，从数据字典中得到所有字段。<br />\n不用 *，直接使用具体列名时，数据库引擎就省去了查询数据字典的步骤，从而缩短执行时间。<br />\n所以，确实需要用表中的所有列时采用 *。 其它情况全部使用具体的列名。</li>\n<li><strong>当要删除表中的所有记录时，使用 truncate 代替 delete</strong></li>\n<li><strong>其它技巧</strong><br />\n使用 Exists 代替 in、驱动表的选择、Where 子句的连接顺序</li>\n</ul>\n<h1 id=\"练习习题\"><a class=\"anchor\" href=\"#练习习题\">#</a> 练习习题</h1>\n<h2 id=\"题1-表空间的操作\"><a class=\"anchor\" href=\"#题1-表空间的操作\">#</a> 题 1 表空间的操作</h2>\n<p>要求：<br />\n创建名为的表空间<br />\n数据文件设置为 '' 初始大小为 10M<br />\n 自动扩容开启<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">tablespace</span> tbs_姓名首字母</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>datafile <span class=\"token string\">'f:\\tbs_姓名首字母.dmp'</span> size <span class=\"token number\">10</span>M</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>autoextend <span class=\"token keyword\">on</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题2-用户的操作\"><a class=\"anchor\" href=\"#题2-用户的操作\">#</a> 题 2 用户的操作</h2>\n<p>要求：<br />\n创建名为姓名首字母用户<br />\n密码设置成 admin<br />\n 设置 tbs_姓名首字母表空间为用户的默认表空间<br />\n使用 system 用户授予 unlimited 权限给姓名首字母用户<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> 姓名首字母</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>identified <span class=\"token keyword\">by</span> admin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">default</span> <span class=\"token keyword\">tablespace</span> tbs_姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">grant</span> unlimited <span class=\"token keyword\">tablespace</span> <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题3-权限的操作\"><a class=\"anchor\" href=\"#题3-权限的操作\">#</a> 题 3 权限的操作</h2>\n<p>1、<br />\n使用 system 登录，执行命令<br />\n grant connect to 姓名首字母用户<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、<br />\n进行试验，测试 Resource 角色包含哪些具体的权限，填写下表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">角色</th>\n<th style=\"text-align:center\">具体的操作</th>\n<th style=\"text-align:center\">是否能执行该操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Resource</td>\n<td style=\"text-align:center\">Insert into table</td>\n<td style=\"text-align:center\">能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Resource</td>\n<td style=\"text-align:center\">Update table</td>\n<td style=\"text-align:center\">能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Resource</td>\n<td style=\"text-align:center\">delete from table</td>\n<td style=\"text-align:center\">能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Resource</td>\n<td style=\"text-align:center\">Select from table</td>\n<td style=\"text-align:center\">能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Resource</td>\n<td style=\"text-align:center\">Drop table</td>\n<td style=\"text-align:center\">能</td>\n</tr>\n</tbody>\n</table>\n<p>3、<br />\n要求：将连接数据库的权限 (create session) 授权给姓名首字母用户<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">session</span> <span class=\"token keyword\">to</span> 姓名首字母用户<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>4、<br />\n授予姓名首字母查询 scott.emp 表的权限<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">on</span> scott<span class=\"token punctuation\">.</span>emp <span class=\"token keyword\">to</span> 姓名首字母用户<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题4-序列\"><a class=\"anchor\" href=\"#题4-序列\">#</a> 题 4 序列</h2>\n<p>1、<br />\n使用 system 用户授权（create sequence）权限给姓名首字母用户<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> sequence <span class=\"token keyword\">to</span> 姓名首字母用户<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、<br />\n使用姓名首字母用户，创建名称为 seq_boy 的序列，首项为 1、递增量 1、最大值 5000、不循环<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> sequence seq_boy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">start</span> <span class=\"token keyword\">with</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>increment <span class=\"token keyword\">by</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>maxvalue <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nocycle<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>3、<br />\n写出获取序列 seq_boy 当前值、seq_boy 下一值的代码<br />\n<strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> seq_boy<span class=\"token punctuation\">.</span>currval <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>     <span class=\"token comment\">--- 当前值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> seq_boy<span class=\"token punctuation\">.</span>nextval <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>     <span class=\"token comment\">--- 下一值</span></pre></td></tr></table></figure><p>4、<br />\n往 boy 表中插入以下信息，要求使用 seq_boy 自动生成 ID<br />\n<strong> 代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> boy <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>seq_boy<span class=\"token punctuation\">.</span>nextval<span class=\"token punctuation\">,</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> boy <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>seq_boy<span class=\"token punctuation\">.</span>nextval<span class=\"token punctuation\">,</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> boy <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>seq_boy<span class=\"token punctuation\">.</span>nextval<span class=\"token punctuation\">,</span><span class=\"token string\">'王五'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题5-同义词\"><a class=\"anchor\" href=\"#题5-同义词\">#</a> 题 5 同义词</h2>\n<ul>\n<li><strong>私有同义词</strong><br />\n 1、<br />\n授予连接数据库（create session）、创建别名权限（create synonym）、查询 scott.emp 的权限给用户姓名首字母<br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">session</span> <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> synonym <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">on</span> scott<span class=\"token punctuation\">.</span>emp <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、<br />\n切换到用户姓名首字母，为 scott.emp 表创建同义词 sy1<br />\n<strong> 代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> synonym sy1 <span class=\"token keyword\">for</span> scott<span class=\"token punctuation\">.</span>emp<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>3、<br />\n查询 scott.emp 表中的所有记录，要求查询语句中不能出现 scott.emp<br />\n<strong> 代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> sy1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>4、<br />\n使用 system 用户，创建用户姓名首字母 2，授予 connect ,select on scott.emp 权限给姓名首字母 2<br />\n<strong> 代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> 姓名首字母<span class=\"token number\">2</span> identified <span class=\"token keyword\">by</span> admin<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">on</span> scott<span class=\"token punctuation\">.</span>emp <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>公有同义词</strong><br />\n 1、<br />\n使用 system 用户，授予 create public synonym 权限给姓名首字母用户，将代码<br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">public</span> synonym <span class=\"token keyword\">to</span> 姓名首字母<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>2、<br />\n使用姓名首字母用户，为 scott.emp 创建公有同义词 sy_public<br />\n<strong> 代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">public</span> synonym sy_public <span class=\"token keyword\">for</span> scott<span class=\"token punctuation\">.</span>emp<span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/10/27/computer-science/SSH/week-3/",
            "url": "http://www.xieyihui.top/2020/10/27/computer-science/SSH/week-3/",
            "title": "第3周 多表连接查询、SQL函数、分组聚合",
            "date_published": "2020-10-27T14:56:03.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记和习题整理</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"多表连接查询\"><a class=\"anchor\" href=\"#多表连接查询\">#</a> 多表连接查询</h2>\n<p>功能：同时查询多张表里的数据<br />\n种类： <code>inner join</code> , <code>left join</code> , <code>right join</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">连接方式</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">inner join</td>\n<td style=\"text-align:center\">显示两张表中，符合连接条件的记录。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">left join</td>\n<td style=\"text-align:center\">左表显示所有记录；右表只显示符合连接条件的记录。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">right join</td>\n<td style=\"text-align:center\">右表显示所有记录；左表只显示符合连接条件的记录。</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/3.1.png\" alt=\"\" /></p>\n<ul>\n<li><strong>inner join（内连接）</strong><br />\n功能：显示两张表中，符合连接条件的记录。<br />\n示意图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/3.2.png\" alt=\"\" />\n<ul>\n<li><strong>命令格式：</strong></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> 字段清单<span class=\"token punctuation\">(</span>表名<span class=\"token punctuation\">.</span>字段名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> …<span class=\"token punctuation\">.</span> <span class=\"token keyword\">From</span> 表A</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> 表B\t\t\t\t\t\t<span class=\"token comment\">-- 连接方式：inner join 交集</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">on</span> 表A<span class=\"token punctuation\">.</span>共有字段<span class=\"token operator\">=</span>表B<span class=\"token punctuation\">.</span>共有字段\t\t<span class=\"token comment\">-- 连接条件</span></pre></td></tr></table></figure><ul>\n<li><strong>inner join 查询的步骤</strong><br />\n 1. 列出要查的字段清单，以 表名。字段名 的形式列在 Select 后面。<br />\n2. 数一数两张表种，哪张表要查的字段更多，出字段多的表，放在 from 后面；出字段少的表，放在 inner join 后面。<br />\n3. 两张表的共有属性用等号连接，放在 on 后面，作为连接条件。</li>\n</ul>\n<ul>\n<li><strong>Left join (左连接)</strong><br />\n 功能：左表显示所有记录；右表只显示符合连接条件的记录。<br />\n示意图：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/3.3.png\" alt=\"\" />\n<ul>\n<li><strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span>  字段清单<span class=\"token punctuation\">(</span>表名<span class=\"token punctuation\">.</span>字段名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> …<span class=\"token punctuation\">.</span> <span class=\"token keyword\">From</span> 表A</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> 表B\t\t\t\t\t\t<span class=\"token comment\">-- 连接方式 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">on</span> 表A<span class=\"token punctuation\">.</span>共有字段<span class=\"token operator\">=</span>表B<span class=\"token punctuation\">.</span>共有字段\t\t\t<span class=\"token comment\">-- 连接条件</span></pre></td></tr></table></figure><ul>\n<li><strong>Left join 查询的步骤</strong><br />\n 1. 列出要查的字段清单，以 表名。字段名 的形式列在 Select 后面。<br />\n2. 观察两张表中，哪一张需要显示所有记录，要显示所有记录的表，放在 from 后面。另一张表放在 left join 后面。<br />\n3. 两张表的共有属性用等号连接，放在 on 后面，作为连接条件。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常用sql函数\"><a class=\"anchor\" href=\"#常用sql函数\">#</a> 常用 SQL 函数</h2>\n<h3 id=\"类型转换函数\"><a class=\"anchor\" href=\"#类型转换函数\">#</a> 类型转换函数</h3>\n<p><code>to_char()</code> 、 <code>to_date()</code> 、 <code>to_number()</code></p>\n<ul>\n<li><strong>to_char (X, 格式，NLS 参数)</strong><br />\n 功能：将数据 X（数值型或日期型），转成对应的字符串<br />\n说明：数据 X 为要转换的数据；参数 2 为格式，可为空；参数 3 为 NLS 参数，可为空。<br />\n返回： <code>字符串类型</code>\n<ul>\n<li><strong>数值型转字符串</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">1210</span><span class=\"token punctuation\">)</span>                返回 <span class=\"token string\">'1234'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">1210.73</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9999.9'</span><span class=\"token punctuation\">)</span>   返回 <span class=\"token string\">'1210.7'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">1210.73</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9,999.99'</span><span class=\"token punctuation\">)</span> 返回 <span class=\"token string\">'1,210.73'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'000099'</span><span class=\"token punctuation\">)</span>        返回 <span class=\"token string\">'000021'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">852</span><span class=\"token punctuation\">,</span><span class=\"token string\">'xxxx'</span><span class=\"token punctuation\">)</span>          返回 <span class=\"token string\">'354'</span></pre></td></tr></table></figure><ul>\n<li><strong>日期型转字符串</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'dd'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">-- 取出几号</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'mm'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">-- 取出月份 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 取出年份</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'ddd'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- 取出年中的第几天 (1-366)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'ww'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">-- 取出第几周（1-53）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">-- 取出第几季度 (1、2、3、4)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">-- 取出是周几（1-7）</span></pre></td></tr></table></figure></li>\n<li><strong>to_date (字符串 X, 格式说明，NLS 参数)</strong><br />\n 功能：将字符串 X 转化为日期型<br />\n说明：字符串 X 为要转换的数据；参数 2 为格式说明，可为空；参数 3 为 NLS 参数，可为空。<br />\n返回： <code>日期型</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">to_date('2020.09.14','yyyy.mm.dd')</td>\n<td style=\"text-align:center\">2020/09/14</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">to_date('20200914','yyyymmdd')</td>\n<td style=\"text-align:center\">2020/09/14</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">to_date('2020-09-14','yyyy-mm-dd')</td>\n<td style=\"text-align:center\">2020/09/14</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>to_number (字符串 X)</strong><br />\n 功能：字符串转成数值类型<br />\n返回： <code>number</code>  类型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">to_number('1234')</td>\n<td style=\"text-align:center\">1234</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">to_number('123.45')</td>\n<td style=\"text-align:center\">123.4</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"滤空函数\"><a class=\"anchor\" href=\"#滤空函数\">#</a> 滤空函数</h3>\n<p>背景：Oracle 中，NULL + 任意数，结果都为 NULL<br />\n 这种情况与实际情况相违背。为了解决这个问题，Oracle 提供了滤空函数。</p>\n<ul>\n<li><strong>nvl (表达示一，表达式二)</strong><br />\n 功能：一空，则返回二。</li>\n<li><strong>nvl2 (表达式一，表达式二，表达式三)</strong><br />\n 功能：一空，则返回三；否则返回二。</li>\n</ul>\n<h3 id=\"转换器函数-decode\"><a class=\"anchor\" href=\"#转换器函数-decode\">#</a> 转换器函数 decode</h3>\n<p>表达式：(value1,output1,elseoutput)<br />\n 功能：输出转换。<br />\n说明：当表达式的值为 value1 时，返回 output1，否则返回 elseoutput。</p>\n<h3 id=\"分析函数\"><a class=\"anchor\" href=\"#分析函数\">#</a> 分析函数</h3>\n<p>功能：对一组查询结果进行运算，返回多行<br />\n说明：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> ename<span class=\"token punctuation\">,</span>deptno<span class=\"token punctuation\">,</span>sal<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">-- 按照每个部门分组，对薪水从大到小排序，每个部门序号从 1 开始，同一个部门相同薪水序号相同，</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">-- 且和下一条不同记录的排名之间空出排名</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> sal <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"RANK\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">-- 按照每个部门分组，对薪水从大到小排序，每个部门序号从 1 开始，同一个部门相同薪水序号相同，</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">-- 且和下一条不同记录的排名之间不空出排名</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  DENSE_RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> sal <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"DENSE_RANK\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">-- 按照每个部门分组，对薪水从大到小排序，每个部门序号从 1 开始，同一个部门相同薪水序号继续</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">-- 递增，顺序排名</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> deptno <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> sal <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"ROW_NUMBER\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token keyword\">FROM</span> employee<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/3.4.png\" alt=\"\" /></p>\n<h2 id=\"聚合函数\"><a class=\"anchor\" href=\"#聚合函数\">#</a> 聚合函数</h2>\n<p><strong>（1）常用的聚合函数：</strong><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/3.5.png\" alt=\"\" /><br />\n<strong>（2）特征：</strong><br />\na. 对一列值进行计算，并返回一个值<br />\n举例： <code>select min(sal) from employee</code> <br />\nb. 聚合函数经常与 <code>group by</code>  分组依据一起使用</p>\n<ul>\n<li><strong>（单列）分组聚合：</strong>\n<ul>\n<li><strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 分组依据<span class=\"token punctuation\">,</span> 聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> 表</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> 分组依据</pre></td></tr></table></figure></li>\n<li><strong>（多列）分组聚合：</strong>\n<ul>\n<li><strong>命令格式：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 分组依据<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>分组依据<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> 表</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> 分组依据<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 分组依据<span class=\"token number\">2</span></pre></td></tr></table></figure></li>\n</ul>\n<p>c. 聚合表达式可作为筛选条件。要求放在 <code>group by</code>  之后使用 <code>having</code>  聚合表达式 …. 构成筛选条件。<br />\n<strong>命令格式：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 分组依据<span class=\"token punctuation\">,</span>聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> 表</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> 分组依据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">having</span> 聚合函数<span class=\"token punctuation\">(</span>列<span class=\"token punctuation\">)</span> …<span class=\"token punctuation\">.</span></pre></td></tr></table></figure><h1 id=\"练习习题\"><a class=\"anchor\" href=\"#练习习题\">#</a> 练习习题</h1>\n<h2 id=\"题1-显示所有员工的姓名-入职年度hiredate中的yyyy部分\"><a class=\"anchor\" href=\"#题1-显示所有员工的姓名-入职年度hiredate中的yyyy部分\">#</a> 题 1 显示所有员工的姓名、入职年度（hiredate 中的 YYYY 部分）</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>to_char<span class=\"token punctuation\">(</span>hiredate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> employee<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题2-显示入职日期在每个月最后一天的所有员工\"><a class=\"anchor\" href=\"#题2-显示入职日期在每个月最后一天的所有员工\">#</a> 题 2 显示入职日期在每个月最后一天的所有员工</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> hiredate<span class=\"token operator\">=</span>last_day<span class=\"token punctuation\">(</span>hiredate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题3-分组聚合列出每个部门的deptnodname员工总数\"><a class=\"anchor\" href=\"#题3-分组聚合列出每个部门的deptnodname员工总数\">#</a> 题 3 （分组聚合）列出每个部门的 deptno,dname, 员工总数</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> dept<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>dept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>empno<span class=\"token punctuation\">)</span> 员工总数 <span class=\"token keyword\">from</span> dept</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> employee</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">on</span> dept<span class=\"token punctuation\">.</span>deptno<span class=\"token operator\">=</span>employee<span class=\"token punctuation\">.</span>deptno</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> dept<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">,</span>dept<span class=\"token punctuation\">.</span>dname<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题4-子查询列出sal比smith-多的所有员工\"><a class=\"anchor\" href=\"#题4-子查询列出sal比smith-多的所有员工\">#</a> 题 4 （子查询）列出 sal 比 SMITH 多的所有员工</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> ename <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> sal<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> sal <span class=\"token keyword\">from</span> employee <span class=\"token keyword\">where</span> ename<span class=\"token operator\">=</span><span class=\"token string\">'SMITH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题5-连接查询列出岗位job为clerk的员工的姓名-部门名称\"><a class=\"anchor\" href=\"#题5-连接查询列出岗位job为clerk的员工的姓名-部门名称\">#</a> 题 5 （连接查询）列出岗位（job）为 clerk 的员工的姓名、部门名称</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> employee<span class=\"token punctuation\">.</span>ename<span class=\"token punctuation\">,</span>dept<span class=\"token punctuation\">.</span>dname <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> dept</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">on</span> employee<span class=\"token punctuation\">.</span>deptno<span class=\"token operator\">=</span>dept<span class=\"token punctuation\">.</span>deptno</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> job<span class=\"token operator\">=</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题6-分组聚合列出各种工作类别的最低薪金显示最低薪金大于6500的记录\"><a class=\"anchor\" href=\"#题6-分组聚合列出各种工作类别的最低薪金显示最低薪金大于6500的记录\">#</a> 题 6 （分组聚合）列出各种工作类别的最低薪金，显示最低薪金大于 6500 的记录</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> job<span class=\"token punctuation\">,</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> job</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">having</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">6500</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题7-子查询对客户表customers中地域nls_territory为america-的记录的客户经理查询出客户经理的姓名employeeename-薪水employeesal\"><a class=\"anchor\" href=\"#题7-子查询对客户表customers中地域nls_territory为america-的记录的客户经理查询出客户经理的姓名employeeename-薪水employeesal\">#</a> 题 7 （子查询）对客户表 (customers) 中地域（nls_territory）为 AMERICA 的记录的客户经理，查询出客户经理的姓名（employee.ename）、薪水 (employee.sal)</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> empno <span class=\"token operator\">in</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> account_mgr_id <span class=\"token keyword\">from</span> customers</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> nls_territory<span class=\"token operator\">=</span><span class=\"token string\">'AMERICA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题8-操作符in在客户表中查出地域nls_territory为america-italy-india-china的客户编号customer_id-语言nls_language\"><a class=\"anchor\" href=\"#题8-操作符in在客户表中查出地域nls_territory为america-italy-india-china的客户编号customer_id-语言nls_language\">#</a> 题 8 （操作符 in）在客户表中查出地域（nls_territory）为 AMERICA、ITALY、INDIA、CHINA 的客户编号（customer_id）、语言 (nls_language);</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> customer_id<span class=\"token punctuation\">,</span>nls_language <span class=\"token keyword\">from</span> customers</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> nls_territory <span class=\"token operator\">in</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token string\">'AMERICA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ITALY'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'INDIA'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CHINA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题9-查询employee表显示每个部门-每个岗位的最高工资\"><a class=\"anchor\" href=\"#题9-查询employee表显示每个部门-每个岗位的最高工资\">#</a> 题 9 查询 employee 表，显示每个部门、每个岗位的最高工资</h2>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> deptno<span class=\"token punctuation\">,</span>job<span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> deptno<span class=\"token punctuation\">,</span>job</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> deptno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/10/25/computer-science/SSH/week-2/",
            "url": "http://www.xieyihui.top/2020/10/25/computer-science/SSH/week-2/",
            "title": "第2周 使用SQL语句操作表",
            "date_published": "2020-10-25T13:37:29.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记和习题整理</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"创建表的命令-插入记录-更改记录-删除记录的命令\"><a class=\"anchor\" href=\"#创建表的命令-插入记录-更改记录-删除记录的命令\">#</a> 创建表的命令、插入记录、更改记录、删除记录的命令</h2>\n<ul>\n<li><strong>创建表的命令</strong>\n<ul>\n<li><code>命令格式：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>字段名<span class=\"token number\">1</span>  类型  约束<span class=\"token punctuation\">(</span>可选<span class=\"token punctuation\">)</span>， </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>字段名<span class=\"token number\">2</span>  类型 约束<span class=\"token punctuation\">(</span>可选<span class=\"token punctuation\">)</span>，</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>字段名n 类型 约束<span class=\"token punctuation\">(</span>可选<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li><strong>插入记录</strong>\n<ul>\n<li><code>命令格式1：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>字段<span class=\"token number\">1</span>的值<span class=\"token punctuation\">,</span>字段<span class=\"token number\">2</span>的值<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>字段n的值<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><code>命令格式2：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> table_name<span class=\"token punctuation\">(</span>列<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>列<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li><strong>更改记录</strong>\n<ul>\n<li><code>命令格式：</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">update</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">set</span> 列名<span class=\"token operator\">=</span>值</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">where</span> 筛选条件<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>清空表中的所有记录</strong>\n<ul>\n<li><code>命令格式：</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">truncate</span> <span class=\"token keyword\">table</span> 表名</pre></td></tr></table></figure><h2 id=\"查询关键字\"><a class=\"anchor\" href=\"#查询关键字\">#</a> 查询关键字</h2>\n<ul>\n<li>排序\n<ul>\n<li>降序 <code>desc</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Order</span> <span class=\"token keyword\">by</span> 排序字段 <span class=\"token keyword\">desc</span></pre></td></tr></table></figure><ul>\n<li>升序 <code>asc</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Order</span> <span class=\"token keyword\">by</span> 排序字段 <span class=\"token keyword\">asc</span></pre></td></tr></table></figure></li>\n<li><strong>不选择重复行</strong><br />\n <code>Distinct</code> <br />\n 说明：重复的结果只显示 <code>1</code>  次</li>\n<li><strong>筛选条件</strong><br />\n <code>where</code>\n<ul>\n<li>命令格式：</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 字段<span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> 表名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">where</span> 筛选条件<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li><strong>列取别名</strong>\n<ul>\n<li><code>命令格式1：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 列名 <span class=\"token keyword\">as</span> 别名 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><ul>\n<li><code>命令格式2：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> 列名 别名 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure></li>\n<li><strong>从 select 结果创建新表</strong>\n<ul>\n<li><code>命令格式：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">as</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"sql操作符\"><a class=\"anchor\" href=\"#sql操作符\">#</a> SQL 操作符</h2>\n<ul>\n<li><strong>算数操作符</strong><br />\n种类：+  -  *  /<br />\n 功能：number 类型的列，可使用算数操作符进行运算</li>\n<li><strong>比较操作符</strong><br />\n功能：对两个表达式的值进行比较</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">种类</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">=</td>\n<td style=\"text-align:center\">等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!=</td>\n<td style=\"text-align:center\">不等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;=</td>\n<td style=\"text-align:center\">大于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;=</td>\n<td style=\"text-align:center\">小于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IN (值 1, 值 2,...)</td>\n<td style=\"text-align:center\">与列表中的值匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">LIKE</td>\n<td style=\"text-align:center\">字符匹配模式。匹配符 %：任意个字符。 匹配符？: 一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IS NULL</td>\n<td style=\"text-align:center\">判断字段值为空</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>逻辑运算符</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">用法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AND</td>\n<td style=\"text-align:center\">Where 条件 A  and 条件 B</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OR</td>\n<td style=\"text-align:center\">Where 条件 A  or 条件 B</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NOT</td>\n<td style=\"text-align:center\">Where not 条件</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>集合运算符</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">用法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Union</td>\n<td style=\"text-align:center\">联合</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Union All</td>\n<td style=\"text-align:center\">联合所有</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Intersect</td>\n<td style=\"text-align:center\">交集</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Minus</td>\n<td style=\"text-align:center\">减集</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>Minus 差集</strong><br />\n <code>命令格式：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> 表     <span class=\"token comment\">-- 结果 A</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>minus</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">from</span> 表  \t<span class=\"token comment\">-- 结果 B</span></pre></td></tr></table></figure><p>说明： <code>A-B</code> <br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/2.1.png\" alt=\"\" /><br />\n 举例：<br />\n说明：employee 表中存放了在职和已退休员工的工号 (empno)，retireEmp 存放了已退休员工的工号 (rempno)。<br />\n要求：仅查询在职员工的工号</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> empno <span class=\"token keyword\">FROM</span> emp  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>MINUS</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">SELECT</span> rempno <span class=\"token keyword\">FROM</span> retireEmp<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>字符串连接符</strong><br />\n说明：用于将两个字符串合并成一个新字符串<br />\n <code>命令格式：</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>列A <span class=\"token operator\">||</span> 列B</pre></td></tr></table></figure><h1 id=\"练习习题\"><a class=\"anchor\" href=\"#练习习题\">#</a> 练习习题</h1>\n<h2 id=\"题1-确定合适的类型\"><a class=\"anchor\" href=\"#题1-确定合适的类型\">#</a> 题 1 确定合适的类型</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性名</th>\n<th style=\"text-align:center\">特征</th>\n<th style=\"text-align:center\">类型（宽度）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">员工编号</td>\n<td style=\"text-align:center\">4 位数字。如 1111</td>\n<td style=\"text-align:center\"><code>NUMBER(4)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">员工姓名 1</td>\n<td style=\"text-align:center\">英文字母，不超过 10 个字母。<br>要尽量高的存储空间利用率</td>\n<td style=\"text-align:center\"><code>VARCHAR2(10)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">员工姓名 2</td>\n<td style=\"text-align:center\">汉字，不超过 10 个汉字<br>要尽量高的存储空间利用率</td>\n<td style=\"text-align:center\"><code>NVARCHAR2(10)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">岗位 1</td>\n<td style=\"text-align:center\">英文字母，不超过 10 个字母</td>\n<td style=\"text-align:center\"><code>VARCHAR2(10)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">岗位 2</td>\n<td style=\"text-align:center\">汉字，不超过 10 个汉字</td>\n<td style=\"text-align:center\"><code>NVARCHAR2(10)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">上级经理编号</td>\n<td style=\"text-align:center\">4 位数字</td>\n<td style=\"text-align:center\"><code>NUMBER(4)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">入职日期</td>\n<td style=\"text-align:center\">年 - 月 - 日</td>\n<td style=\"text-align:center\"><code>DATE</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">薪水</td>\n<td style=\"text-align:center\">数字，最大 5 位数</td>\n<td style=\"text-align:center\"><code>NUMBE(5)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">岗位津贴</td>\n<td style=\"text-align:center\">数字，最大 5 位数</td>\n<td style=\"text-align:center\"><code>NUMBER(5)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">所属部门编号</td>\n<td style=\"text-align:center\">2 位数字。如 01</td>\n<td style=\"text-align:center\"><code>NUMBER(2)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">证件照</td>\n<td style=\"text-align:center\">图片</td>\n<td style=\"text-align:center\"><code>BLOB</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自我介绍</td>\n<td style=\"text-align:center\">视频</td>\n<td style=\"text-align:center\"><code>BLOB</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">简历</td>\n<td style=\"text-align:center\">可能超过 2000 汉字</td>\n<td style=\"text-align:center\"><code>CLOB(2000)</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"题2-约束的种类\"><a class=\"anchor\" href=\"#题2-约束的种类\">#</a> 题 2 约束的种类</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">约束</th>\n<th style=\"text-align:center\">关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">主键约束</td>\n<td style=\"text-align:center\"><code>primary key</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">外键约束</td>\n<td style=\"text-align:center\"><code>foreign key</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">非空约束</td>\n<td style=\"text-align:center\"><code>not null</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">唯一值约束</td>\n<td style=\"text-align:center\"><code>unique</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认约束</td>\n<td style=\"text-align:center\"><code>default  ‘默认值’</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Check 约束</td>\n<td style=\"text-align:center\"><code>举例：check(gender='男' or gender='女');</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"题3-创建部门表-约束\"><a class=\"anchor\" href=\"#题3-创建部门表-约束\">#</a> 题 3 创建部门表、约束</h2>\n<ul>\n<li><strong>（1）创建部门表，表名为 dept</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性说明</th>\n<th style=\"text-align:center\">属性</th>\n<th style=\"text-align:center\">类型（宽度）</th>\n<th style=\"text-align:center\">约束</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">部门编号</td>\n<td style=\"text-align:center\">deptno</td>\n<td style=\"text-align:center\">number(2)</td>\n<td style=\"text-align:center\">主键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">部门名称</td>\n<td style=\"text-align:center\">dname</td>\n<td style=\"text-align:center\">varchar2(14)</td>\n<td style=\"text-align:center\">非空、唯一</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">部门地址</td>\n<td style=\"text-align:center\">loc</td>\n<td style=\"text-align:center\">VARCHAR2(13)</td>\n<td style=\"text-align:center\">默认值 ‘company’</td>\n</tr>\n</tbody>\n</table>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> dept</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>deptno number<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>dname varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>loc varchar2<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span><span class=\"token string\">'company'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（2）将以下数据插入到 dept 中</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性说明</th>\n<th style=\"text-align:center\">属性</th>\n<th style=\"text-align:center\">类型（宽度）</th>\n<th style=\"text-align:center\">约束</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">员工编号</td>\n<td style=\"text-align:center\">eno</td>\n<td style=\"text-align:center\">number(4)</td>\n<td style=\"text-align:center\">主键约束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">员工姓名</td>\n<td style=\"text-align:center\">ename</td>\n<td style=\"text-align:center\">varchar2(10)</td>\n<td style=\"text-align:center\">非空</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">岗位</td>\n<td style=\"text-align:center\">job</td>\n<td style=\"text-align:center\">VARCHAR2(9)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">领导编号</td>\n<td style=\"text-align:center\">mgr</td>\n<td style=\"text-align:center\">number(4)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">入职日期</td>\n<td style=\"text-align:center\">Hiredate</td>\n<td style=\"text-align:center\">date</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">薪资</td>\n<td style=\"text-align:center\">sal</td>\n<td style=\"text-align:center\">number(7,2)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">福利</td>\n<td style=\"text-align:center\">Comm</td>\n<td style=\"text-align:center\">number(7,2)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">所属部门号</td>\n<td style=\"text-align:center\">deptno</td>\n<td style=\"text-align:center\">number(2)</td>\n<td style=\"text-align:center\">外键，参照部门表的部门号<br>dept(deptno)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Accounting'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Research'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Dallas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Sales'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Chicago'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Operations'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Boston'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题4-使用rownum实现分页查询\"><a class=\"anchor\" href=\"#题4-使用rownum实现分页查询\">#</a> 题 4 使用 rownum 实现分页查询</h2>\n<ul>\n<li><strong>（1）查询 employee 表中按 sal 字段 降序排列后的 第 5 到第 9 条记录</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> rownum rn <span class=\"token keyword\">from</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> sal <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> rn<span class=\"token operator\">>=</span><span class=\"token number\">5</span> <span class=\"token operator\">and</span> rn<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（2）查询 employee 表中按 ename 字段升序排列后的 第 1 到第 3 条记录</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> rownum rn <span class=\"token keyword\">from</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> ename <span class=\"token keyword\">asc</span><span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> rn<span class=\"token operator\">>=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> rn<span class=\"token operator\">&lt;=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题5-筛选-排序-选择不重复行\"><a class=\"anchor\" href=\"#题5-筛选-排序-选择不重复行\">#</a> 题 5 筛选、排序、选择不重复行</h2>\n<ul>\n<li><strong>（1）选出所有岗位为 CLERK 的记录的 ename 属性，sal 属性，按 sal 降序排序</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> job<span class=\"token operator\">=</span><span class=\"token string\">'CLERK'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> sal <span class=\"token keyword\">desc</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（2）选择出 employee 表中的所有岗位（job），每种岗位只显示 1 次</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> job <span class=\"token keyword\">from</span> employee<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"题6-sql操作符\"><a class=\"anchor\" href=\"#题6-sql操作符\">#</a> 题 6 SQL 操作符</h2>\n<ul>\n<li><strong>（1）查询 employee 表中姓名以字母 A 开头的员工</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'A%'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（2）查询 employee 表中 ename 长度为 5 个字符的所有记录</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'_____'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（3）查询 employee 表中 comm 字段为空的员工</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> comm <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（4）查询岗位 (job) 为 CLERK、MANAGER、SALSMAN 之一的所有员工</strong><br />\n<strong>代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> employee</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">where</span> job <span class=\"token operator\">in</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（5）将 employee 表的 job 列和 ename 列进行拼接，显示 出 job 列 _ 姓名列， 新列显示成 “岗位_姓名”</strong><br />\n<strong> 代码：</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> job <span class=\"token operator\">||</span> <span class=\"token string\">'_'</span> <span class=\"token operator\">||</span> ename 岗位_姓名 <span class=\"token keyword\">from</span> employee<span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        },
        {
            "id": "http://www.xieyihui.top/2020/10/25/computer-science/SSH/week-1/",
            "url": "http://www.xieyihui.top/2020/10/25/computer-science/SSH/week-1/",
            "title": "第1周 Oracle数据类型、约束、ROWNUM实现分页查询",
            "date_published": "2020-10-25T13:07:25.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><div class=\"note info\">\n<p>以下为个人学习笔记</p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"oracle-11g-安装\"><a class=\"anchor\" href=\"#oracle-11g-安装\">#</a> Oracle 11g 安装</h2>\n<p><code>超详细</code> 的安装教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpZGFwYW5nMTIzL2FydGljbGUvZGV0YWlscy84ODkyODAzNQ==\">https://blog.csdn.net/lidapang123/article/details/88928035</span></p>\n<h2 id=\"oracle中的数据类型\"><a class=\"anchor\" href=\"#oracle中的数据类型\">#</a> Oracle 中的数据类型</h2>\n<p><strong>Oracle 中的数据类型： <code>字符型</code> 、 <code>数值型</code> 、 <code>日期型</code> 、 <code>LOB类型</code> 、 <code>（BLOB、CLOB）</code> </strong></p>\n<ul>\n<li><strong>字符类型</strong><br />\n（1）以 <code>固定长度</code> 存放字符串：CHAR (n)、NCHAR (n)<br />\n 说明：CHAR (10)，存一个字符串 ’abc’<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/1.1.png\" alt=\"\" /><br />\n区别：NCHAR 以 <code>UNICODE</code>  存储每个字符<br />\n n 的最大取值：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/1.2.png\" alt=\"\" /><br />\n（2）以 <code>可变长度</code> 存储字符串  VARCHAR2 (n)、NVARCHAR2 (n)<br />\n 说明：VARCHAR2 (10)，存一个字符串’abc’<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/1.3.png\" alt=\"\" /><br />\n区别：NVARCHAR2 以 <code>UNICODE编码</code> 存储每个字符<br />\n n 的最大取值：<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/1.4.png\" alt=\"\" /></li>\n<li><strong>数值型</strong><br />\n从输入的数值划分： <code>整数</code> 、 <code>小数</code> <br />\n（1）NUMBER 类型<br />\n a. 表示小数<br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/1.5.png\" alt=\"\" /><br />\n举例： NUMBER (5,2)，总共 5 个有效数字，小数点后保留 2 位，例如：123.45<br />\nb. 表示整数 NUMBER (P)<br />\n 举例：NUMBER (5)，5 位数的整数</li>\n<li><strong>日期型</strong>\n<ul>\n<li>（1）DATE 型<br />\n格式： <code>YYYY-MM-DD HH:MM:SS</code> <br />\n 精确程度： <code>秒</code></li>\n<li>（2）TIMESTAMP<br />\n 精确程度： <code>0.000001秒</code> <br />\n但使用较少</li>\n</ul>\n</li>\n<li><strong>大对象类型（Large OBject）</strong>\n<ul>\n<li>（1） <code>BLOB</code>  类型  <code>(Binary Large OBject)</code> <br />\n 以 <code>二进制</code> 形式存储<br />\n举例：图片、音频、视频<br />\n最大存储 <code>4G</code>  字节</li>\n<li>（2） <code>CLOB</code>  类型  <code>(Character Large Object)</code> <br />\n 以 <code>字符串</code> 形式存储<br />\n举例：简历、新闻、文章<br />\n最大存储 <code>4G</code>  字节</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"数据类型总结\"><a class=\"anchor\" href=\"#数据类型总结\">#</a> 数据类型总结</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据</th>\n<th style=\"text-align:center\">应采用的类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">字符串</td>\n<td style=\"text-align:center\">Nvarchar2、varchar2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数值型</td>\n<td style=\"text-align:center\">Number</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日期型</td>\n<td style=\"text-align:center\">Date</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">图片、音频、视频</td>\n<td style=\"text-align:center\">BLOB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">超过千字的文本</td>\n<td style=\"text-align:center\">CLOB</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"约束\"><a class=\"anchor\" href=\"#约束\">#</a> 约束</h2>\n<p><strong> <code>6种</code> 常用约束</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">约束</th>\n<th style=\"text-align:center\">关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">主键约束</td>\n<td style=\"text-align:center\">primary key</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">外键约束</td>\n<td style=\"text-align:center\">foreign key</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">非空约束</td>\n<td style=\"text-align:center\">not null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">唯一值约束</td>\n<td style=\"text-align:center\">unique</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认约束</td>\n<td style=\"text-align:center\">default  ‘默认值’</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Check 约束</td>\n<td style=\"text-align:center\">举例：check (gender=' 男 ' or gender=' 女 ');</td>\n</tr>\n</tbody>\n</table>\n<p><strong> <code>2个</code> 添加约束的时机</strong></p>\n<ul>\n<li><strong>（1）创建时添加约束</strong></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 表名 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>列名<span class=\"token number\">1</span> 数值类型<span class=\"token number\">1</span> 约束<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>列名<span class=\"token number\">2</span> 数值类型<span class=\"token number\">2</span> 约束<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>（2）创建表之后，使用 <code>alter table</code>  命令</strong>\n<ul>\n<li>添加主键约束</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 主键名 <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>主键列<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>添加外键约束</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名 <span class=\"token keyword\">Foreign</span> <span class=\"token keyword\">Key</span><span class=\"token punctuation\">(</span>从表的外键列<span class=\"token punctuation\">)</span> <span class=\"token keyword\">References</span> 主表名<span class=\"token punctuation\">(</span>主表的主键列<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>使用 <code>PL/SQL Developer</code>  图形界面添加约束</strong><br />\n<img data-src=\"https://picture-1303140728.cos.ap-guangzhou.myqcloud.com/blog_picture/ssh_picture/1.6.png\" alt=\"\" /></p>\n<h2 id=\"rowid和rownum\"><a class=\"anchor\" href=\"#rowid和rownum\">#</a> ROWID 和 ROWNUM</h2>\n<ul>\n<li><strong>ROWID</strong><br />\n 说明：RowID 可以理解为 Oracle 为每一张表添加的一个 <code>隐藏列</code> 。<br />\n表中的每一行（记录），都有一个行地址，ROWID 用于查询该行地址。<br />\n任意两行的 ROWID 不同。<br />\nROWID 只能 <code>查询</code> ，不能 <code>修改</code> 、 <code>删除</code> 。</li>\n<li><strong>ROWNUM</strong><br />\n 说明：对于查询结果表，rownum 能返回每一行在结果表的序号。<br />\n结果表中的第一行 rownum 为 1、第 n 行 rownum 为 n。</li>\n</ul>\n<h2 id=\"rownum实现分页查询\"><a class=\"anchor\" href=\"#rownum实现分页查询\">#</a> Rownum 实现分页查询</h2>\n<p><strong>功能：从表 X 中，查出按字段 F 排序后的 第 M 到第 N 条记录</strong><br />\n <code>命令公式：</code></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> rownum rn <span class=\"token keyword\">from</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表X <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 字段F 排序方式<span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> rn<span class=\"token operator\">>=</span>M <span class=\"token operator\">and</span> rn<span class=\"token operator\">&lt;=</span>N<span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "SSH轻量级框架",
                "学习笔记",
                "SSH"
            ]
        }
    ]
}